'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4952
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


'
'This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
'
Namespace NorthwindClient
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0"), _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="INorthwind")> _
    Public Interface INorthwind

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Shippers_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Shippers_SaveCollectionResponse")> _
        Function BeginShippers_SaveCollection(ByVal collection As Proxies.ShippersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndShippers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Shippers_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Shippers_SaveEntityResponse")> _
        Function BeginShippers_SaveEntity(ByVal entity As Proxies.ShippersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndShippers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Suppliers_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Suppliers_LoadAllResponse")> _
        Function BeginSuppliers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndSuppliers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Suppliers_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Suppliers_QueryForCollectionResponse")> _
        Function BeginSuppliers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndSuppliers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Suppliers_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Suppliers_QueryForEntityResponse")> _
        Function BeginSuppliers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndSuppliers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Suppliers_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Suppliers_GetByPrimaryKeyResponse")> _
        Function BeginSuppliers_GetByPrimaryKey(ByVal supplierID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndSuppliers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Suppliers_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Suppliers_SaveCollectionResponse")> _
        Function BeginSuppliers_SaveCollection(ByVal collection As Proxies.SuppliersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndSuppliers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Suppliers_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Suppliers_SaveEntityResponse")> _
        Function BeginSuppliers_SaveEntity(ByVal entity As Proxies.SuppliersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndSuppliers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Territories_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Territories_LoadAllResponse")> _
        Function BeginTerritories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndTerritories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Territories_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Territories_QueryForCollectionResponse")> _
        Function BeginTerritories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Territories_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Territories_QueryForEntityResponse")> _
        Function BeginTerritories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Territories_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Territories_GetByPrimaryKeyResponse")> _
        Function BeginTerritories_GetByPrimaryKey(ByVal territoryID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Territories_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Territories_SaveCollectionResponse")> _
        Function BeginTerritories_SaveCollection(ByVal collection As Proxies.TerritoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Territories_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Territories_SaveEntityResponse")> _
        Function BeginTerritories_SaveEntity(ByVal entity As Proxies.TerritoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/EmployeeTerritories_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/EmployeeTerritories_QueryForEntityResponse")> _
        Function BeginEmployeeTerritories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployeeTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/EmployeeTerritories_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/EmployeeTerritories_GetByPrimaryKeyResponse")> _
        Function BeginEmployeeTerritories_GetByPrimaryKey(ByVal employeeID As Integer, ByVal territoryID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployeeTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/EmployeeTerritories_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/EmployeeTerritories_SaveCollectionResponse")> _
        Function BeginEmployeeTerritories_SaveCollection(ByVal collection As Proxies.EmployeeTerritoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployeeTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/EmployeeTerritories_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/EmployeeTerritories_SaveEntityResponse")> _
        Function BeginEmployeeTerritories_SaveEntity(ByVal entity As Proxies.EmployeeTerritoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployeeTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/OrderDetails_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/OrderDetails_LoadAllResponse")> _
        Function BeginOrderDetails_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrderDetails_LoadAll(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/OrderDetails_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/OrderDetails_QueryForCollectionResponse")> _
        Function BeginOrderDetails_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrderDetails_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/OrderDetails_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/OrderDetails_QueryForEntityResponse")> _
        Function BeginOrderDetails_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrderDetails_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/OrderDetails_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/OrderDetails_GetByPrimaryKeyResponse")> _
        Function BeginOrderDetails_GetByPrimaryKey(ByVal orderID As Integer, ByVal productID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrderDetails_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/OrderDetails_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/OrderDetails_SaveCollectionResponse")> _
        Function BeginOrderDetails_SaveCollection(ByVal collection As Proxies.OrderDetailsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrderDetails_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/OrderDetails_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/OrderDetails_SaveEntityResponse")> _
        Function BeginOrderDetails_SaveEntity(ByVal entity As Proxies.OrderDetailsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrderDetails_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Orders_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Orders_LoadAllResponse")> _
        Function BeginOrders_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrders_LoadAll(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Orders_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Orders_QueryForCollectionResponse")> _
        Function BeginOrders_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrders_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Orders_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Orders_QueryForEntityResponse")> _
        Function BeginOrders_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrders_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Orders_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Orders_GetByPrimaryKeyResponse")> _
        Function BeginOrders_GetByPrimaryKey(ByVal orderID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrders_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Orders_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Orders_SaveCollectionResponse")> _
        Function BeginOrders_SaveCollection(ByVal collection As Proxies.OrdersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrders_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Orders_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Orders_SaveEntityResponse")> _
        Function BeginOrders_SaveEntity(ByVal entity As Proxies.OrdersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndOrders_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Products_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Products_LoadAllResponse")> _
        Function BeginProducts_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndProducts_LoadAll(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Products_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Products_QueryForCollectionResponse")> _
        Function BeginProducts_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndProducts_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Products_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Products_QueryForEntityResponse")> _
        Function BeginProducts_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndProducts_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Products_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Products_GetByPrimaryKeyResponse")> _
        Function BeginProducts_GetByPrimaryKey(ByVal productID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndProducts_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Products_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Products_SaveCollectionResponse")> _
        Function BeginProducts_SaveCollection(ByVal collection As Proxies.ProductsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndProducts_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Products_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Products_SaveEntityResponse")> _
        Function BeginProducts_SaveEntity(ByVal entity As Proxies.ProductsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndProducts_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Region_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Region_LoadAllResponse")> _
        Function BeginRegion_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndRegion_LoadAll(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Region_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Region_QueryForCollectionResponse")> _
        Function BeginRegion_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndRegion_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Region_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Region_QueryForEntityResponse")> _
        Function BeginRegion_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndRegion_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Region_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Region_GetByPrimaryKeyResponse")> _
        Function BeginRegion_GetByPrimaryKey(ByVal regionID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndRegion_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Region_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Region_SaveCollectionResponse")> _
        Function BeginRegion_SaveCollection(ByVal collection As Proxies.RegionCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndRegion_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Region_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Region_SaveEntityResponse")> _
        Function BeginRegion_SaveEntity(ByVal entity As Proxies.RegionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndRegion_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Shippers_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Shippers_LoadAllResponse")> _
        Function BeginShippers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndShippers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Shippers_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Shippers_QueryForCollectionResponse")> _
        Function BeginShippers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndShippers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Shippers_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Shippers_QueryForEntityResponse")> _
        Function BeginShippers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndShippers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Shippers_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Shippers_GetByPrimaryKeyResponse")> _
        Function BeginShippers_GetByPrimaryKey(ByVal shipperID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndShippers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Categories_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Categories_LoadAllResponse")> _
        Function BeginCategories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCategories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Categories_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Categories_QueryForCollectionResponse")> _
        Function BeginCategories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCategories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Categories_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Categories_QueryForEntityResponse")> _
        Function BeginCategories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCategories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Categories_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Categories_GetByPrimaryKeyResponse")> _
        Function BeginCategories_GetByPrimaryKey(ByVal categoryID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCategories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Categories_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Categories_SaveCollectionResponse")> _
        Function BeginCategories_SaveCollection(ByVal collection As Proxies.CategoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCategories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Categories_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Categories_SaveEntityResponse")> _
        Function BeginCategories_SaveEntity(ByVal entity As Proxies.CategoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCategories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerCustomerDemo_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/CustomerCustomerDemo_LoadAllResponse")> _
        Function BeginCustomerCustomerDemo_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerCustomerDemo_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerCustomerDemo_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/CustomerCustomerDemo_QueryForCollectionResponse")> _
        Function BeginCustomerCustomerDemo_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerCustomerDemo_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerCustomerDemo_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/CustomerCustomerDemo_QueryForEntityResponse")> _
        Function BeginCustomerCustomerDemo_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerCustomerDemo_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerCustomerDemo_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/CustomerCustomerDemo_GetByPrimaryKeyResponse")> _
        Function BeginCustomerCustomerDemo_GetByPrimaryKey(ByVal customerID As String, ByVal customerTypeID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerCustomerDemo_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerCustomerDemo_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/CustomerCustomerDemo_SaveCollectionResponse")> _
        Function BeginCustomerCustomerDemo_SaveCollection(ByVal collection As Proxies.CustomerCustomerDemoCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerCustomerDemo_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerCustomerDemo_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/CustomerCustomerDemo_SaveEntityResponse")> _
        Function BeginCustomerCustomerDemo_SaveEntity(ByVal entity As Proxies.CustomerCustomerDemoProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerCustomerDemo_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerDemographics_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/CustomerDemographics_LoadAllResponse")> _
        Function BeginCustomerDemographics_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerDemographics_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerDemographics_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/CustomerDemographics_QueryForCollectionResponse")> _
        Function BeginCustomerDemographics_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerDemographics_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerDemographics_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/CustomerDemographics_QueryForEntityResponse")> _
        Function BeginCustomerDemographics_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerDemographics_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerDemographics_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/CustomerDemographics_GetByPrimaryKeyResponse")> _
        Function BeginCustomerDemographics_GetByPrimaryKey(ByVal customerTypeID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerDemographics_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerDemographics_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/CustomerDemographics_SaveCollectionResponse")> _
        Function BeginCustomerDemographics_SaveCollection(ByVal collection As Proxies.CustomerDemographicsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerDemographics_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/CustomerDemographics_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/CustomerDemographics_SaveEntityResponse")> _
        Function BeginCustomerDemographics_SaveEntity(ByVal entity As Proxies.CustomerDemographicsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomerDemographics_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Customers_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Customers_LoadAllResponse")> _
        Function BeginCustomers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Customers_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Customers_QueryForCollectionResponse")> _
        Function BeginCustomers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Customers_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Customers_QueryForEntityResponse")> _
        Function BeginCustomers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Customers_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Customers_GetByPrimaryKeyResponse")> _
        Function BeginCustomers_GetByPrimaryKey(ByVal customerID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Customers_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Customers_SaveCollectionResponse")> _
        Function BeginCustomers_SaveCollection(ByVal collection As Proxies.CustomersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Customers_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Customers_SaveEntityResponse")> _
        Function BeginCustomers_SaveEntity(ByVal entity As Proxies.CustomersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndCustomers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Employees_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/Employees_LoadAllResponse")> _
        Function BeginEmployees_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployees_LoadAll(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Employees_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/Employees_QueryForCollectionResponse")> _
        Function BeginEmployees_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployees_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Employees_QueryForEntity", ReplyAction:="http://tempuri.org/INorthwind/Employees_QueryForEntityResponse")> _
        Function BeginEmployees_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployees_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Employees_GetByPrimaryKey", ReplyAction:="http://tempuri.org/INorthwind/Employees_GetByPrimaryKeyResponse")> _
        Function BeginEmployees_GetByPrimaryKey(ByVal employeeID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployees_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Employees_SaveCollection", ReplyAction:="http://tempuri.org/INorthwind/Employees_SaveCollectionResponse")> _
        Function BeginEmployees_SaveCollection(ByVal collection As Proxies.EmployeesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployees_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/Employees_SaveEntity", ReplyAction:="http://tempuri.org/INorthwind/Employees_SaveEntityResponse")> _
        Function BeginEmployees_SaveEntity(ByVal entity As Proxies.EmployeesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployees_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/EmployeeTerritories_LoadAll", ReplyAction:="http://tempuri.org/INorthwind/EmployeeTerritories_LoadAllResponse")> _
        Function BeginEmployeeTerritories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployeeTerritories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/INorthwind/EmployeeTerritories_QueryForCollection", ReplyAction:="http://tempuri.org/INorthwind/EmployeeTerritories_QueryForCollectionResponse")> _
        Function BeginEmployeeTerritories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndEmployeeTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub
    End Interface

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Public Interface INorthwindChannel
        Inherits INorthwind, System.ServiceModel.IClientChannel
    End Interface

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Shippers_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ShippersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ShippersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Shippers_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ShippersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ShippersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Suppliers_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.SuppliersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.SuppliersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Suppliers_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.SuppliersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.SuppliersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Suppliers_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.SuppliersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.SuppliersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Suppliers_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.SuppliersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.SuppliersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Suppliers_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.SuppliersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.SuppliersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Suppliers_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.SuppliersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.SuppliersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Territories_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.TerritoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.TerritoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Territories_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.TerritoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.TerritoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Territories_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.TerritoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.TerritoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Territories_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.TerritoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.TerritoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Territories_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.TerritoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.TerritoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Territories_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.TerritoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.TerritoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class EmployeeTerritories_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeeTerritoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeeTerritoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class EmployeeTerritories_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeeTerritoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeeTerritoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class EmployeeTerritories_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeeTerritoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeeTerritoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class EmployeeTerritories_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeeTerritoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeeTerritoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class OrderDetails_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrderDetailsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrderDetailsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class OrderDetails_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrderDetailsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrderDetailsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class OrderDetails_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrderDetailsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrderDetailsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class OrderDetails_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrderDetailsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrderDetailsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class OrderDetails_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrderDetailsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrderDetailsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class OrderDetails_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrderDetailsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrderDetailsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Orders_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrdersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrdersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Orders_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrdersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrdersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Orders_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrdersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrdersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Orders_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrdersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrdersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Orders_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrdersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrdersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Orders_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.OrdersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.OrdersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Products_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ProductsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ProductsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Products_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ProductsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ProductsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Products_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ProductsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ProductsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Products_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ProductsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ProductsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Products_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ProductsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ProductsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Products_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ProductsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ProductsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Region_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.RegionCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.RegionCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Region_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.RegionCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.RegionCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Region_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.RegionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.RegionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Region_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.RegionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.RegionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Region_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.RegionCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.RegionCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Region_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.RegionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.RegionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Shippers_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ShippersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ShippersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Shippers_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ShippersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ShippersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Shippers_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ShippersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ShippersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Shippers_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.ShippersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.ShippersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Categories_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CategoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CategoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Categories_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CategoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CategoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Categories_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CategoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CategoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Categories_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CategoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CategoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Categories_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CategoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CategoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Categories_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CategoriesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CategoriesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerCustomerDemo_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerCustomerDemoCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerCustomerDemoCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerCustomerDemo_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerCustomerDemoCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerCustomerDemoCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerCustomerDemo_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerCustomerDemoProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerCustomerDemoProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerCustomerDemo_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerCustomerDemoProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerCustomerDemoProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerCustomerDemo_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerCustomerDemoCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerCustomerDemoCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerCustomerDemo_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerCustomerDemoProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerCustomerDemoProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerDemographics_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerDemographicsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerDemographicsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerDemographics_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerDemographicsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerDemographicsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerDemographics_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerDemographicsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerDemographicsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerDemographics_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerDemographicsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerDemographicsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerDemographics_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerDemographicsCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerDemographicsCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class CustomerDemographics_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomerDemographicsProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomerDemographicsProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Customers_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Customers_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Customers_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Customers_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Customers_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomersCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomersCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Customers_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.CustomersProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.CustomersProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Employees_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Employees_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Employees_QueryForEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Employees_GetByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Employees_SaveCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class Employees_SaveEntityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeesProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeesProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class EmployeeTerritories_LoadAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeeTerritoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeeTerritoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class EmployeeTerritories_QueryForCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As Proxies.EmployeeTerritoriesCollectionProxyStub
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Proxies.EmployeeTerritoriesCollectionProxyStub)
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")> _
    Partial Public Class NorthwindClient
        Inherits System.ServiceModel.ClientBase(Of INorthwind)
        Implements INorthwind

        Private onBeginShippers_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndShippers_SaveCollectionDelegate As EndOperationDelegate

        Private onShippers_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginShippers_SaveEntityDelegate As BeginOperationDelegate

        Private onEndShippers_SaveEntityDelegate As EndOperationDelegate

        Private onShippers_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginSuppliers_LoadAllDelegate As BeginOperationDelegate

        Private onEndSuppliers_LoadAllDelegate As EndOperationDelegate

        Private onSuppliers_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginSuppliers_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndSuppliers_QueryForCollectionDelegate As EndOperationDelegate

        Private onSuppliers_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginSuppliers_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndSuppliers_QueryForEntityDelegate As EndOperationDelegate

        Private onSuppliers_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginSuppliers_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndSuppliers_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onSuppliers_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginSuppliers_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndSuppliers_SaveCollectionDelegate As EndOperationDelegate

        Private onSuppliers_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginSuppliers_SaveEntityDelegate As BeginOperationDelegate

        Private onEndSuppliers_SaveEntityDelegate As EndOperationDelegate

        Private onSuppliers_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginTerritories_LoadAllDelegate As BeginOperationDelegate

        Private onEndTerritories_LoadAllDelegate As EndOperationDelegate

        Private onTerritories_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginTerritories_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndTerritories_QueryForCollectionDelegate As EndOperationDelegate

        Private onTerritories_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginTerritories_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndTerritories_QueryForEntityDelegate As EndOperationDelegate

        Private onTerritories_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginTerritories_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndTerritories_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onTerritories_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginTerritories_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndTerritories_SaveCollectionDelegate As EndOperationDelegate

        Private onTerritories_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginTerritories_SaveEntityDelegate As BeginOperationDelegate

        Private onEndTerritories_SaveEntityDelegate As EndOperationDelegate

        Private onTerritories_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployeeTerritories_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndEmployeeTerritories_QueryForEntityDelegate As EndOperationDelegate

        Private onEmployeeTerritories_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployeeTerritories_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndEmployeeTerritories_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onEmployeeTerritories_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployeeTerritories_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndEmployeeTerritories_SaveCollectionDelegate As EndOperationDelegate

        Private onEmployeeTerritories_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployeeTerritories_SaveEntityDelegate As BeginOperationDelegate

        Private onEndEmployeeTerritories_SaveEntityDelegate As EndOperationDelegate

        Private onEmployeeTerritories_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrderDetails_LoadAllDelegate As BeginOperationDelegate

        Private onEndOrderDetails_LoadAllDelegate As EndOperationDelegate

        Private onOrderDetails_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrderDetails_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndOrderDetails_QueryForCollectionDelegate As EndOperationDelegate

        Private onOrderDetails_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrderDetails_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndOrderDetails_QueryForEntityDelegate As EndOperationDelegate

        Private onOrderDetails_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrderDetails_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndOrderDetails_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onOrderDetails_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrderDetails_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndOrderDetails_SaveCollectionDelegate As EndOperationDelegate

        Private onOrderDetails_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrderDetails_SaveEntityDelegate As BeginOperationDelegate

        Private onEndOrderDetails_SaveEntityDelegate As EndOperationDelegate

        Private onOrderDetails_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrders_LoadAllDelegate As BeginOperationDelegate

        Private onEndOrders_LoadAllDelegate As EndOperationDelegate

        Private onOrders_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrders_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndOrders_QueryForCollectionDelegate As EndOperationDelegate

        Private onOrders_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrders_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndOrders_QueryForEntityDelegate As EndOperationDelegate

        Private onOrders_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrders_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndOrders_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onOrders_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrders_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndOrders_SaveCollectionDelegate As EndOperationDelegate

        Private onOrders_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOrders_SaveEntityDelegate As BeginOperationDelegate

        Private onEndOrders_SaveEntityDelegate As EndOperationDelegate

        Private onOrders_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginProducts_LoadAllDelegate As BeginOperationDelegate

        Private onEndProducts_LoadAllDelegate As EndOperationDelegate

        Private onProducts_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginProducts_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndProducts_QueryForCollectionDelegate As EndOperationDelegate

        Private onProducts_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginProducts_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndProducts_QueryForEntityDelegate As EndOperationDelegate

        Private onProducts_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginProducts_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndProducts_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onProducts_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginProducts_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndProducts_SaveCollectionDelegate As EndOperationDelegate

        Private onProducts_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginProducts_SaveEntityDelegate As BeginOperationDelegate

        Private onEndProducts_SaveEntityDelegate As EndOperationDelegate

        Private onProducts_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginRegion_LoadAllDelegate As BeginOperationDelegate

        Private onEndRegion_LoadAllDelegate As EndOperationDelegate

        Private onRegion_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginRegion_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndRegion_QueryForCollectionDelegate As EndOperationDelegate

        Private onRegion_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginRegion_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndRegion_QueryForEntityDelegate As EndOperationDelegate

        Private onRegion_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginRegion_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndRegion_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onRegion_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginRegion_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndRegion_SaveCollectionDelegate As EndOperationDelegate

        Private onRegion_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginRegion_SaveEntityDelegate As BeginOperationDelegate

        Private onEndRegion_SaveEntityDelegate As EndOperationDelegate

        Private onRegion_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginShippers_LoadAllDelegate As BeginOperationDelegate

        Private onEndShippers_LoadAllDelegate As EndOperationDelegate

        Private onShippers_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginShippers_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndShippers_QueryForCollectionDelegate As EndOperationDelegate

        Private onShippers_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginShippers_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndShippers_QueryForEntityDelegate As EndOperationDelegate

        Private onShippers_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginShippers_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndShippers_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onShippers_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCategories_LoadAllDelegate As BeginOperationDelegate

        Private onEndCategories_LoadAllDelegate As EndOperationDelegate

        Private onCategories_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCategories_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndCategories_QueryForCollectionDelegate As EndOperationDelegate

        Private onCategories_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCategories_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndCategories_QueryForEntityDelegate As EndOperationDelegate

        Private onCategories_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCategories_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndCategories_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onCategories_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCategories_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndCategories_SaveCollectionDelegate As EndOperationDelegate

        Private onCategories_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCategories_SaveEntityDelegate As BeginOperationDelegate

        Private onEndCategories_SaveEntityDelegate As EndOperationDelegate

        Private onCategories_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerCustomerDemo_LoadAllDelegate As BeginOperationDelegate

        Private onEndCustomerCustomerDemo_LoadAllDelegate As EndOperationDelegate

        Private onCustomerCustomerDemo_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerCustomerDemo_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndCustomerCustomerDemo_QueryForCollectionDelegate As EndOperationDelegate

        Private onCustomerCustomerDemo_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerCustomerDemo_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndCustomerCustomerDemo_QueryForEntityDelegate As EndOperationDelegate

        Private onCustomerCustomerDemo_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerCustomerDemo_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndCustomerCustomerDemo_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onCustomerCustomerDemo_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerCustomerDemo_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndCustomerCustomerDemo_SaveCollectionDelegate As EndOperationDelegate

        Private onCustomerCustomerDemo_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerCustomerDemo_SaveEntityDelegate As BeginOperationDelegate

        Private onEndCustomerCustomerDemo_SaveEntityDelegate As EndOperationDelegate

        Private onCustomerCustomerDemo_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerDemographics_LoadAllDelegate As BeginOperationDelegate

        Private onEndCustomerDemographics_LoadAllDelegate As EndOperationDelegate

        Private onCustomerDemographics_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerDemographics_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndCustomerDemographics_QueryForCollectionDelegate As EndOperationDelegate

        Private onCustomerDemographics_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerDemographics_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndCustomerDemographics_QueryForEntityDelegate As EndOperationDelegate

        Private onCustomerDemographics_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerDemographics_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndCustomerDemographics_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onCustomerDemographics_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerDemographics_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndCustomerDemographics_SaveCollectionDelegate As EndOperationDelegate

        Private onCustomerDemographics_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomerDemographics_SaveEntityDelegate As BeginOperationDelegate

        Private onEndCustomerDemographics_SaveEntityDelegate As EndOperationDelegate

        Private onCustomerDemographics_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomers_LoadAllDelegate As BeginOperationDelegate

        Private onEndCustomers_LoadAllDelegate As EndOperationDelegate

        Private onCustomers_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomers_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndCustomers_QueryForCollectionDelegate As EndOperationDelegate

        Private onCustomers_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomers_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndCustomers_QueryForEntityDelegate As EndOperationDelegate

        Private onCustomers_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomers_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndCustomers_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onCustomers_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomers_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndCustomers_SaveCollectionDelegate As EndOperationDelegate

        Private onCustomers_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCustomers_SaveEntityDelegate As BeginOperationDelegate

        Private onEndCustomers_SaveEntityDelegate As EndOperationDelegate

        Private onCustomers_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployees_LoadAllDelegate As BeginOperationDelegate

        Private onEndEmployees_LoadAllDelegate As EndOperationDelegate

        Private onEmployees_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployees_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndEmployees_QueryForCollectionDelegate As EndOperationDelegate

        Private onEmployees_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployees_QueryForEntityDelegate As BeginOperationDelegate

        Private onEndEmployees_QueryForEntityDelegate As EndOperationDelegate

        Private onEmployees_QueryForEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployees_GetByPrimaryKeyDelegate As BeginOperationDelegate

        Private onEndEmployees_GetByPrimaryKeyDelegate As EndOperationDelegate

        Private onEmployees_GetByPrimaryKeyCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployees_SaveCollectionDelegate As BeginOperationDelegate

        Private onEndEmployees_SaveCollectionDelegate As EndOperationDelegate

        Private onEmployees_SaveCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployees_SaveEntityDelegate As BeginOperationDelegate

        Private onEndEmployees_SaveEntityDelegate As EndOperationDelegate

        Private onEmployees_SaveEntityCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployeeTerritories_LoadAllDelegate As BeginOperationDelegate

        Private onEndEmployeeTerritories_LoadAllDelegate As EndOperationDelegate

        Private onEmployeeTerritories_LoadAllCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginEmployeeTerritories_QueryForCollectionDelegate As BeginOperationDelegate

        Private onEndEmployeeTerritories_QueryForCollectionDelegate As EndOperationDelegate

        Private onEmployeeTerritories_QueryForCollectionCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginOpenDelegate As BeginOperationDelegate

        Private onEndOpenDelegate As EndOperationDelegate

        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginCloseDelegate As BeginOperationDelegate

        Private onEndCloseDelegate As EndOperationDelegate

        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback

        Public Sub New()
            MyBase.New()
        End Sub

        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub

        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub

        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub

        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub

        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)()
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set(ByVal value As System.Net.CookieContainer)
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)()
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = Value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" & _
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property

        Public Event Shippers_SaveCollectionCompleted As System.EventHandler(Of Shippers_SaveCollectionCompletedEventArgs)

        Public Event Shippers_SaveEntityCompleted As System.EventHandler(Of Shippers_SaveEntityCompletedEventArgs)

        Public Event Suppliers_LoadAllCompleted As System.EventHandler(Of Suppliers_LoadAllCompletedEventArgs)

        Public Event Suppliers_QueryForCollectionCompleted As System.EventHandler(Of Suppliers_QueryForCollectionCompletedEventArgs)

        Public Event Suppliers_QueryForEntityCompleted As System.EventHandler(Of Suppliers_QueryForEntityCompletedEventArgs)

        Public Event Suppliers_GetByPrimaryKeyCompleted As System.EventHandler(Of Suppliers_GetByPrimaryKeyCompletedEventArgs)

        Public Event Suppliers_SaveCollectionCompleted As System.EventHandler(Of Suppliers_SaveCollectionCompletedEventArgs)

        Public Event Suppliers_SaveEntityCompleted As System.EventHandler(Of Suppliers_SaveEntityCompletedEventArgs)

        Public Event Territories_LoadAllCompleted As System.EventHandler(Of Territories_LoadAllCompletedEventArgs)

        Public Event Territories_QueryForCollectionCompleted As System.EventHandler(Of Territories_QueryForCollectionCompletedEventArgs)

        Public Event Territories_QueryForEntityCompleted As System.EventHandler(Of Territories_QueryForEntityCompletedEventArgs)

        Public Event Territories_GetByPrimaryKeyCompleted As System.EventHandler(Of Territories_GetByPrimaryKeyCompletedEventArgs)

        Public Event Territories_SaveCollectionCompleted As System.EventHandler(Of Territories_SaveCollectionCompletedEventArgs)

        Public Event Territories_SaveEntityCompleted As System.EventHandler(Of Territories_SaveEntityCompletedEventArgs)

        Public Event EmployeeTerritories_QueryForEntityCompleted As System.EventHandler(Of EmployeeTerritories_QueryForEntityCompletedEventArgs)

        Public Event EmployeeTerritories_GetByPrimaryKeyCompleted As System.EventHandler(Of EmployeeTerritories_GetByPrimaryKeyCompletedEventArgs)

        Public Event EmployeeTerritories_SaveCollectionCompleted As System.EventHandler(Of EmployeeTerritories_SaveCollectionCompletedEventArgs)

        Public Event EmployeeTerritories_SaveEntityCompleted As System.EventHandler(Of EmployeeTerritories_SaveEntityCompletedEventArgs)

        Public Event OrderDetails_LoadAllCompleted As System.EventHandler(Of OrderDetails_LoadAllCompletedEventArgs)

        Public Event OrderDetails_QueryForCollectionCompleted As System.EventHandler(Of OrderDetails_QueryForCollectionCompletedEventArgs)

        Public Event OrderDetails_QueryForEntityCompleted As System.EventHandler(Of OrderDetails_QueryForEntityCompletedEventArgs)

        Public Event OrderDetails_GetByPrimaryKeyCompleted As System.EventHandler(Of OrderDetails_GetByPrimaryKeyCompletedEventArgs)

        Public Event OrderDetails_SaveCollectionCompleted As System.EventHandler(Of OrderDetails_SaveCollectionCompletedEventArgs)

        Public Event OrderDetails_SaveEntityCompleted As System.EventHandler(Of OrderDetails_SaveEntityCompletedEventArgs)

        Public Event Orders_LoadAllCompleted As System.EventHandler(Of Orders_LoadAllCompletedEventArgs)

        Public Event Orders_QueryForCollectionCompleted As System.EventHandler(Of Orders_QueryForCollectionCompletedEventArgs)

        Public Event Orders_QueryForEntityCompleted As System.EventHandler(Of Orders_QueryForEntityCompletedEventArgs)

        Public Event Orders_GetByPrimaryKeyCompleted As System.EventHandler(Of Orders_GetByPrimaryKeyCompletedEventArgs)

        Public Event Orders_SaveCollectionCompleted As System.EventHandler(Of Orders_SaveCollectionCompletedEventArgs)

        Public Event Orders_SaveEntityCompleted As System.EventHandler(Of Orders_SaveEntityCompletedEventArgs)

        Public Event Products_LoadAllCompleted As System.EventHandler(Of Products_LoadAllCompletedEventArgs)

        Public Event Products_QueryForCollectionCompleted As System.EventHandler(Of Products_QueryForCollectionCompletedEventArgs)

        Public Event Products_QueryForEntityCompleted As System.EventHandler(Of Products_QueryForEntityCompletedEventArgs)

        Public Event Products_GetByPrimaryKeyCompleted As System.EventHandler(Of Products_GetByPrimaryKeyCompletedEventArgs)

        Public Event Products_SaveCollectionCompleted As System.EventHandler(Of Products_SaveCollectionCompletedEventArgs)

        Public Event Products_SaveEntityCompleted As System.EventHandler(Of Products_SaveEntityCompletedEventArgs)

        Public Event Region_LoadAllCompleted As System.EventHandler(Of Region_LoadAllCompletedEventArgs)

        Public Event Region_QueryForCollectionCompleted As System.EventHandler(Of Region_QueryForCollectionCompletedEventArgs)

        Public Event Region_QueryForEntityCompleted As System.EventHandler(Of Region_QueryForEntityCompletedEventArgs)

        Public Event Region_GetByPrimaryKeyCompleted As System.EventHandler(Of Region_GetByPrimaryKeyCompletedEventArgs)

        Public Event Region_SaveCollectionCompleted As System.EventHandler(Of Region_SaveCollectionCompletedEventArgs)

        Public Event Region_SaveEntityCompleted As System.EventHandler(Of Region_SaveEntityCompletedEventArgs)

        Public Event Shippers_LoadAllCompleted As System.EventHandler(Of Shippers_LoadAllCompletedEventArgs)

        Public Event Shippers_QueryForCollectionCompleted As System.EventHandler(Of Shippers_QueryForCollectionCompletedEventArgs)

        Public Event Shippers_QueryForEntityCompleted As System.EventHandler(Of Shippers_QueryForEntityCompletedEventArgs)

        Public Event Shippers_GetByPrimaryKeyCompleted As System.EventHandler(Of Shippers_GetByPrimaryKeyCompletedEventArgs)

        Public Event Categories_LoadAllCompleted As System.EventHandler(Of Categories_LoadAllCompletedEventArgs)

        Public Event Categories_QueryForCollectionCompleted As System.EventHandler(Of Categories_QueryForCollectionCompletedEventArgs)

        Public Event Categories_QueryForEntityCompleted As System.EventHandler(Of Categories_QueryForEntityCompletedEventArgs)

        Public Event Categories_GetByPrimaryKeyCompleted As System.EventHandler(Of Categories_GetByPrimaryKeyCompletedEventArgs)

        Public Event Categories_SaveCollectionCompleted As System.EventHandler(Of Categories_SaveCollectionCompletedEventArgs)

        Public Event Categories_SaveEntityCompleted As System.EventHandler(Of Categories_SaveEntityCompletedEventArgs)

        Public Event CustomerCustomerDemo_LoadAllCompleted As System.EventHandler(Of CustomerCustomerDemo_LoadAllCompletedEventArgs)

        Public Event CustomerCustomerDemo_QueryForCollectionCompleted As System.EventHandler(Of CustomerCustomerDemo_QueryForCollectionCompletedEventArgs)

        Public Event CustomerCustomerDemo_QueryForEntityCompleted As System.EventHandler(Of CustomerCustomerDemo_QueryForEntityCompletedEventArgs)

        Public Event CustomerCustomerDemo_GetByPrimaryKeyCompleted As System.EventHandler(Of CustomerCustomerDemo_GetByPrimaryKeyCompletedEventArgs)

        Public Event CustomerCustomerDemo_SaveCollectionCompleted As System.EventHandler(Of CustomerCustomerDemo_SaveCollectionCompletedEventArgs)

        Public Event CustomerCustomerDemo_SaveEntityCompleted As System.EventHandler(Of CustomerCustomerDemo_SaveEntityCompletedEventArgs)

        Public Event CustomerDemographics_LoadAllCompleted As System.EventHandler(Of CustomerDemographics_LoadAllCompletedEventArgs)

        Public Event CustomerDemographics_QueryForCollectionCompleted As System.EventHandler(Of CustomerDemographics_QueryForCollectionCompletedEventArgs)

        Public Event CustomerDemographics_QueryForEntityCompleted As System.EventHandler(Of CustomerDemographics_QueryForEntityCompletedEventArgs)

        Public Event CustomerDemographics_GetByPrimaryKeyCompleted As System.EventHandler(Of CustomerDemographics_GetByPrimaryKeyCompletedEventArgs)

        Public Event CustomerDemographics_SaveCollectionCompleted As System.EventHandler(Of CustomerDemographics_SaveCollectionCompletedEventArgs)

        Public Event CustomerDemographics_SaveEntityCompleted As System.EventHandler(Of CustomerDemographics_SaveEntityCompletedEventArgs)

        Public Event Customers_LoadAllCompleted As System.EventHandler(Of Customers_LoadAllCompletedEventArgs)

        Public Event Customers_QueryForCollectionCompleted As System.EventHandler(Of Customers_QueryForCollectionCompletedEventArgs)

        Public Event Customers_QueryForEntityCompleted As System.EventHandler(Of Customers_QueryForEntityCompletedEventArgs)

        Public Event Customers_GetByPrimaryKeyCompleted As System.EventHandler(Of Customers_GetByPrimaryKeyCompletedEventArgs)

        Public Event Customers_SaveCollectionCompleted As System.EventHandler(Of Customers_SaveCollectionCompletedEventArgs)

        Public Event Customers_SaveEntityCompleted As System.EventHandler(Of Customers_SaveEntityCompletedEventArgs)

        Public Event Employees_LoadAllCompleted As System.EventHandler(Of Employees_LoadAllCompletedEventArgs)

        Public Event Employees_QueryForCollectionCompleted As System.EventHandler(Of Employees_QueryForCollectionCompletedEventArgs)

        Public Event Employees_QueryForEntityCompleted As System.EventHandler(Of Employees_QueryForEntityCompletedEventArgs)

        Public Event Employees_GetByPrimaryKeyCompleted As System.EventHandler(Of Employees_GetByPrimaryKeyCompletedEventArgs)

        Public Event Employees_SaveCollectionCompleted As System.EventHandler(Of Employees_SaveCollectionCompletedEventArgs)

        Public Event Employees_SaveEntityCompleted As System.EventHandler(Of Employees_SaveEntityCompletedEventArgs)

        Public Event EmployeeTerritories_LoadAllCompleted As System.EventHandler(Of EmployeeTerritories_LoadAllCompletedEventArgs)

        Public Event EmployeeTerritories_QueryForCollectionCompleted As System.EventHandler(Of EmployeeTerritories_QueryForCollectionCompletedEventArgs)

        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)

        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginShippers_SaveCollection(ByVal collection As Proxies.ShippersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_SaveCollection
            Return MyBase.Channel.BeginShippers_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndShippers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub Implements INorthwind.EndShippers_SaveCollection
            Return MyBase.Channel.EndShippers_SaveCollection(result)
        End Function

        Private Function OnBeginShippers_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.ShippersCollectionProxyStub = CType(inValues(0), Proxies.ShippersCollectionProxyStub)
            Return CType(Me, INorthwind).BeginShippers_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndShippers_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ShippersCollectionProxyStub = CType(Me, INorthwind).EndShippers_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnShippers_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Shippers_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Shippers_SaveCollectionCompleted(Me, New Shippers_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Shippers_SaveCollectionAsync(ByVal collection As Proxies.ShippersCollectionProxyStub)
            Me.Shippers_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Shippers_SaveCollectionAsync(ByVal collection As Proxies.ShippersCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginShippers_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginShippers_SaveCollectionDelegate = AddressOf Me.OnBeginShippers_SaveCollection
            End If
            If (Me.onEndShippers_SaveCollectionDelegate Is Nothing) Then
                Me.onEndShippers_SaveCollectionDelegate = AddressOf Me.OnEndShippers_SaveCollection
            End If
            If (Me.onShippers_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onShippers_SaveCollectionCompletedDelegate = AddressOf Me.OnShippers_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginShippers_SaveCollectionDelegate, New Object() {collection}, Me.onEndShippers_SaveCollectionDelegate, Me.onShippers_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginShippers_SaveEntity(ByVal entity As Proxies.ShippersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_SaveEntity
            Return MyBase.Channel.BeginShippers_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndShippers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub Implements INorthwind.EndShippers_SaveEntity
            Return MyBase.Channel.EndShippers_SaveEntity(result)
        End Function

        Private Function OnBeginShippers_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.ShippersProxyStub = CType(inValues(0), Proxies.ShippersProxyStub)
            Return CType(Me, INorthwind).BeginShippers_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndShippers_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ShippersProxyStub = CType(Me, INorthwind).EndShippers_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnShippers_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Shippers_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Shippers_SaveEntityCompleted(Me, New Shippers_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Shippers_SaveEntityAsync(ByVal entity As Proxies.ShippersProxyStub)
            Me.Shippers_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Shippers_SaveEntityAsync(ByVal entity As Proxies.ShippersProxyStub, ByVal userState As Object)
            If (Me.onBeginShippers_SaveEntityDelegate Is Nothing) Then
                Me.onBeginShippers_SaveEntityDelegate = AddressOf Me.OnBeginShippers_SaveEntity
            End If
            If (Me.onEndShippers_SaveEntityDelegate Is Nothing) Then
                Me.onEndShippers_SaveEntityDelegate = AddressOf Me.OnEndShippers_SaveEntity
            End If
            If (Me.onShippers_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onShippers_SaveEntityCompletedDelegate = AddressOf Me.OnShippers_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginShippers_SaveEntityDelegate, New Object() {entity}, Me.onEndShippers_SaveEntityDelegate, Me.onShippers_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginSuppliers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_LoadAll
            Return MyBase.Channel.BeginSuppliers_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndSuppliers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub Implements INorthwind.EndSuppliers_LoadAll
            Return MyBase.Channel.EndSuppliers_LoadAll(result)
        End Function

        Private Function OnBeginSuppliers_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginSuppliers_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndSuppliers_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.SuppliersCollectionProxyStub = CType(Me, INorthwind).EndSuppliers_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnSuppliers_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Suppliers_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Suppliers_LoadAllCompleted(Me, New Suppliers_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Suppliers_LoadAllAsync()
            Me.Suppliers_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Suppliers_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginSuppliers_LoadAllDelegate Is Nothing) Then
                Me.onBeginSuppliers_LoadAllDelegate = AddressOf Me.OnBeginSuppliers_LoadAll
            End If
            If (Me.onEndSuppliers_LoadAllDelegate Is Nothing) Then
                Me.onEndSuppliers_LoadAllDelegate = AddressOf Me.OnEndSuppliers_LoadAll
            End If
            If (Me.onSuppliers_LoadAllCompletedDelegate Is Nothing) Then
                Me.onSuppliers_LoadAllCompletedDelegate = AddressOf Me.OnSuppliers_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginSuppliers_LoadAllDelegate, Nothing, Me.onEndSuppliers_LoadAllDelegate, Me.onSuppliers_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginSuppliers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_QueryForCollection
            Return MyBase.Channel.BeginSuppliers_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndSuppliers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub Implements INorthwind.EndSuppliers_QueryForCollection
            Return MyBase.Channel.EndSuppliers_QueryForCollection(result)
        End Function

        Private Function OnBeginSuppliers_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginSuppliers_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndSuppliers_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.SuppliersCollectionProxyStub = CType(Me, INorthwind).EndSuppliers_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnSuppliers_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Suppliers_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Suppliers_QueryForCollectionCompleted(Me, New Suppliers_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Suppliers_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Suppliers_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Suppliers_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginSuppliers_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginSuppliers_QueryForCollectionDelegate = AddressOf Me.OnBeginSuppliers_QueryForCollection
            End If
            If (Me.onEndSuppliers_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndSuppliers_QueryForCollectionDelegate = AddressOf Me.OnEndSuppliers_QueryForCollection
            End If
            If (Me.onSuppliers_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onSuppliers_QueryForCollectionCompletedDelegate = AddressOf Me.OnSuppliers_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginSuppliers_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndSuppliers_QueryForCollectionDelegate, Me.onSuppliers_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginSuppliers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_QueryForEntity
            Return MyBase.Channel.BeginSuppliers_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndSuppliers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub Implements INorthwind.EndSuppliers_QueryForEntity
            Return MyBase.Channel.EndSuppliers_QueryForEntity(result)
        End Function

        Private Function OnBeginSuppliers_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginSuppliers_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndSuppliers_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.SuppliersProxyStub = CType(Me, INorthwind).EndSuppliers_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnSuppliers_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Suppliers_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Suppliers_QueryForEntityCompleted(Me, New Suppliers_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Suppliers_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Suppliers_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Suppliers_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginSuppliers_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginSuppliers_QueryForEntityDelegate = AddressOf Me.OnBeginSuppliers_QueryForEntity
            End If
            If (Me.onEndSuppliers_QueryForEntityDelegate Is Nothing) Then
                Me.onEndSuppliers_QueryForEntityDelegate = AddressOf Me.OnEndSuppliers_QueryForEntity
            End If
            If (Me.onSuppliers_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onSuppliers_QueryForEntityCompletedDelegate = AddressOf Me.OnSuppliers_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginSuppliers_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndSuppliers_QueryForEntityDelegate, Me.onSuppliers_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginSuppliers_GetByPrimaryKey(ByVal supplierID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_GetByPrimaryKey
            Return MyBase.Channel.BeginSuppliers_GetByPrimaryKey(supplierID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndSuppliers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub Implements INorthwind.EndSuppliers_GetByPrimaryKey
            Return MyBase.Channel.EndSuppliers_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginSuppliers_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim supplierID As Integer = CType(inValues(0), Integer)
            Return CType(Me, INorthwind).BeginSuppliers_GetByPrimaryKey(supplierID, callback, asyncState)
        End Function

        Private Function OnEndSuppliers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.SuppliersProxyStub = CType(Me, INorthwind).EndSuppliers_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnSuppliers_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Suppliers_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Suppliers_GetByPrimaryKeyCompleted(Me, New Suppliers_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Suppliers_GetByPrimaryKeyAsync(ByVal supplierID As Integer)
            Me.Suppliers_GetByPrimaryKeyAsync(supplierID, Nothing)
        End Sub

        Public Overloads Sub Suppliers_GetByPrimaryKeyAsync(ByVal supplierID As Integer, ByVal userState As Object)
            If (Me.onBeginSuppliers_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginSuppliers_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginSuppliers_GetByPrimaryKey
            End If
            If (Me.onEndSuppliers_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndSuppliers_GetByPrimaryKeyDelegate = AddressOf Me.OnEndSuppliers_GetByPrimaryKey
            End If
            If (Me.onSuppliers_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onSuppliers_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnSuppliers_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginSuppliers_GetByPrimaryKeyDelegate, New Object() {supplierID}, Me.onEndSuppliers_GetByPrimaryKeyDelegate, Me.onSuppliers_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginSuppliers_SaveCollection(ByVal collection As Proxies.SuppliersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_SaveCollection
            Return MyBase.Channel.BeginSuppliers_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndSuppliers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub Implements INorthwind.EndSuppliers_SaveCollection
            Return MyBase.Channel.EndSuppliers_SaveCollection(result)
        End Function

        Private Function OnBeginSuppliers_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.SuppliersCollectionProxyStub = CType(inValues(0), Proxies.SuppliersCollectionProxyStub)
            Return CType(Me, INorthwind).BeginSuppliers_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndSuppliers_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.SuppliersCollectionProxyStub = CType(Me, INorthwind).EndSuppliers_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnSuppliers_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Suppliers_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Suppliers_SaveCollectionCompleted(Me, New Suppliers_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Suppliers_SaveCollectionAsync(ByVal collection As Proxies.SuppliersCollectionProxyStub)
            Me.Suppliers_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Suppliers_SaveCollectionAsync(ByVal collection As Proxies.SuppliersCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginSuppliers_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginSuppliers_SaveCollectionDelegate = AddressOf Me.OnBeginSuppliers_SaveCollection
            End If
            If (Me.onEndSuppliers_SaveCollectionDelegate Is Nothing) Then
                Me.onEndSuppliers_SaveCollectionDelegate = AddressOf Me.OnEndSuppliers_SaveCollection
            End If
            If (Me.onSuppliers_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onSuppliers_SaveCollectionCompletedDelegate = AddressOf Me.OnSuppliers_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginSuppliers_SaveCollectionDelegate, New Object() {collection}, Me.onEndSuppliers_SaveCollectionDelegate, Me.onSuppliers_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginSuppliers_SaveEntity(ByVal entity As Proxies.SuppliersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_SaveEntity
            Return MyBase.Channel.BeginSuppliers_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndSuppliers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub Implements INorthwind.EndSuppliers_SaveEntity
            Return MyBase.Channel.EndSuppliers_SaveEntity(result)
        End Function

        Private Function OnBeginSuppliers_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.SuppliersProxyStub = CType(inValues(0), Proxies.SuppliersProxyStub)
            Return CType(Me, INorthwind).BeginSuppliers_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndSuppliers_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.SuppliersProxyStub = CType(Me, INorthwind).EndSuppliers_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnSuppliers_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Suppliers_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Suppliers_SaveEntityCompleted(Me, New Suppliers_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Suppliers_SaveEntityAsync(ByVal entity As Proxies.SuppliersProxyStub)
            Me.Suppliers_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Suppliers_SaveEntityAsync(ByVal entity As Proxies.SuppliersProxyStub, ByVal userState As Object)
            If (Me.onBeginSuppliers_SaveEntityDelegate Is Nothing) Then
                Me.onBeginSuppliers_SaveEntityDelegate = AddressOf Me.OnBeginSuppliers_SaveEntity
            End If
            If (Me.onEndSuppliers_SaveEntityDelegate Is Nothing) Then
                Me.onEndSuppliers_SaveEntityDelegate = AddressOf Me.OnEndSuppliers_SaveEntity
            End If
            If (Me.onSuppliers_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onSuppliers_SaveEntityCompletedDelegate = AddressOf Me.OnSuppliers_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginSuppliers_SaveEntityDelegate, New Object() {entity}, Me.onEndSuppliers_SaveEntityDelegate, Me.onSuppliers_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginTerritories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_LoadAll
            Return MyBase.Channel.BeginTerritories_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndTerritories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub Implements INorthwind.EndTerritories_LoadAll
            Return MyBase.Channel.EndTerritories_LoadAll(result)
        End Function

        Private Function OnBeginTerritories_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginTerritories_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndTerritories_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.TerritoriesCollectionProxyStub = CType(Me, INorthwind).EndTerritories_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnTerritories_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Territories_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Territories_LoadAllCompleted(Me, New Territories_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Territories_LoadAllAsync()
            Me.Territories_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Territories_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginTerritories_LoadAllDelegate Is Nothing) Then
                Me.onBeginTerritories_LoadAllDelegate = AddressOf Me.OnBeginTerritories_LoadAll
            End If
            If (Me.onEndTerritories_LoadAllDelegate Is Nothing) Then
                Me.onEndTerritories_LoadAllDelegate = AddressOf Me.OnEndTerritories_LoadAll
            End If
            If (Me.onTerritories_LoadAllCompletedDelegate Is Nothing) Then
                Me.onTerritories_LoadAllCompletedDelegate = AddressOf Me.OnTerritories_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTerritories_LoadAllDelegate, Nothing, Me.onEndTerritories_LoadAllDelegate, Me.onTerritories_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginTerritories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_QueryForCollection
            Return MyBase.Channel.BeginTerritories_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub Implements INorthwind.EndTerritories_QueryForCollection
            Return MyBase.Channel.EndTerritories_QueryForCollection(result)
        End Function

        Private Function OnBeginTerritories_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginTerritories_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.TerritoriesCollectionProxyStub = CType(Me, INorthwind).EndTerritories_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnTerritories_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Territories_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Territories_QueryForCollectionCompleted(Me, New Territories_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Territories_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Territories_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Territories_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginTerritories_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginTerritories_QueryForCollectionDelegate = AddressOf Me.OnBeginTerritories_QueryForCollection
            End If
            If (Me.onEndTerritories_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndTerritories_QueryForCollectionDelegate = AddressOf Me.OnEndTerritories_QueryForCollection
            End If
            If (Me.onTerritories_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onTerritories_QueryForCollectionCompletedDelegate = AddressOf Me.OnTerritories_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTerritories_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndTerritories_QueryForCollectionDelegate, Me.onTerritories_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginTerritories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_QueryForEntity
            Return MyBase.Channel.BeginTerritories_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub Implements INorthwind.EndTerritories_QueryForEntity
            Return MyBase.Channel.EndTerritories_QueryForEntity(result)
        End Function

        Private Function OnBeginTerritories_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginTerritories_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.TerritoriesProxyStub = CType(Me, INorthwind).EndTerritories_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnTerritories_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Territories_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Territories_QueryForEntityCompleted(Me, New Territories_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Territories_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Territories_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Territories_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginTerritories_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginTerritories_QueryForEntityDelegate = AddressOf Me.OnBeginTerritories_QueryForEntity
            End If
            If (Me.onEndTerritories_QueryForEntityDelegate Is Nothing) Then
                Me.onEndTerritories_QueryForEntityDelegate = AddressOf Me.OnEndTerritories_QueryForEntity
            End If
            If (Me.onTerritories_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onTerritories_QueryForEntityCompletedDelegate = AddressOf Me.OnTerritories_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTerritories_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndTerritories_QueryForEntityDelegate, Me.onTerritories_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginTerritories_GetByPrimaryKey(ByVal territoryID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_GetByPrimaryKey
            Return MyBase.Channel.BeginTerritories_GetByPrimaryKey(territoryID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub Implements INorthwind.EndTerritories_GetByPrimaryKey
            Return MyBase.Channel.EndTerritories_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginTerritories_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim territoryID As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginTerritories_GetByPrimaryKey(territoryID, callback, asyncState)
        End Function

        Private Function OnEndTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.TerritoriesProxyStub = CType(Me, INorthwind).EndTerritories_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnTerritories_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Territories_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Territories_GetByPrimaryKeyCompleted(Me, New Territories_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Territories_GetByPrimaryKeyAsync(ByVal territoryID As String)
            Me.Territories_GetByPrimaryKeyAsync(territoryID, Nothing)
        End Sub

        Public Overloads Sub Territories_GetByPrimaryKeyAsync(ByVal territoryID As String, ByVal userState As Object)
            If (Me.onBeginTerritories_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginTerritories_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginTerritories_GetByPrimaryKey
            End If
            If (Me.onEndTerritories_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndTerritories_GetByPrimaryKeyDelegate = AddressOf Me.OnEndTerritories_GetByPrimaryKey
            End If
            If (Me.onTerritories_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onTerritories_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnTerritories_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTerritories_GetByPrimaryKeyDelegate, New Object() {territoryID}, Me.onEndTerritories_GetByPrimaryKeyDelegate, Me.onTerritories_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginTerritories_SaveCollection(ByVal collection As Proxies.TerritoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_SaveCollection
            Return MyBase.Channel.BeginTerritories_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub Implements INorthwind.EndTerritories_SaveCollection
            Return MyBase.Channel.EndTerritories_SaveCollection(result)
        End Function

        Private Function OnBeginTerritories_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.TerritoriesCollectionProxyStub = CType(inValues(0), Proxies.TerritoriesCollectionProxyStub)
            Return CType(Me, INorthwind).BeginTerritories_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.TerritoriesCollectionProxyStub = CType(Me, INorthwind).EndTerritories_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnTerritories_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Territories_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Territories_SaveCollectionCompleted(Me, New Territories_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Territories_SaveCollectionAsync(ByVal collection As Proxies.TerritoriesCollectionProxyStub)
            Me.Territories_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Territories_SaveCollectionAsync(ByVal collection As Proxies.TerritoriesCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginTerritories_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginTerritories_SaveCollectionDelegate = AddressOf Me.OnBeginTerritories_SaveCollection
            End If
            If (Me.onEndTerritories_SaveCollectionDelegate Is Nothing) Then
                Me.onEndTerritories_SaveCollectionDelegate = AddressOf Me.OnEndTerritories_SaveCollection
            End If
            If (Me.onTerritories_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onTerritories_SaveCollectionCompletedDelegate = AddressOf Me.OnTerritories_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTerritories_SaveCollectionDelegate, New Object() {collection}, Me.onEndTerritories_SaveCollectionDelegate, Me.onTerritories_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginTerritories_SaveEntity(ByVal entity As Proxies.TerritoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_SaveEntity
            Return MyBase.Channel.BeginTerritories_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub Implements INorthwind.EndTerritories_SaveEntity
            Return MyBase.Channel.EndTerritories_SaveEntity(result)
        End Function

        Private Function OnBeginTerritories_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.TerritoriesProxyStub = CType(inValues(0), Proxies.TerritoriesProxyStub)
            Return CType(Me, INorthwind).BeginTerritories_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.TerritoriesProxyStub = CType(Me, INorthwind).EndTerritories_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnTerritories_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Territories_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Territories_SaveEntityCompleted(Me, New Territories_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Territories_SaveEntityAsync(ByVal entity As Proxies.TerritoriesProxyStub)
            Me.Territories_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Territories_SaveEntityAsync(ByVal entity As Proxies.TerritoriesProxyStub, ByVal userState As Object)
            If (Me.onBeginTerritories_SaveEntityDelegate Is Nothing) Then
                Me.onBeginTerritories_SaveEntityDelegate = AddressOf Me.OnBeginTerritories_SaveEntity
            End If
            If (Me.onEndTerritories_SaveEntityDelegate Is Nothing) Then
                Me.onEndTerritories_SaveEntityDelegate = AddressOf Me.OnEndTerritories_SaveEntity
            End If
            If (Me.onTerritories_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onTerritories_SaveEntityCompletedDelegate = AddressOf Me.OnTerritories_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTerritories_SaveEntityDelegate, New Object() {entity}, Me.onEndTerritories_SaveEntityDelegate, Me.onTerritories_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployeeTerritories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_QueryForEntity
            Return MyBase.Channel.BeginEmployeeTerritories_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployeeTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub Implements INorthwind.EndEmployeeTerritories_QueryForEntity
            Return MyBase.Channel.EndEmployeeTerritories_QueryForEntity(result)
        End Function

        Private Function OnBeginEmployeeTerritories_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginEmployeeTerritories_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndEmployeeTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeeTerritoriesProxyStub = CType(Me, INorthwind).EndEmployeeTerritories_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployeeTerritories_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.EmployeeTerritories_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent EmployeeTerritories_QueryForEntityCompleted(Me, New EmployeeTerritories_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub EmployeeTerritories_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.EmployeeTerritories_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub EmployeeTerritories_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginEmployeeTerritories_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginEmployeeTerritories_QueryForEntityDelegate = AddressOf Me.OnBeginEmployeeTerritories_QueryForEntity
            End If
            If (Me.onEndEmployeeTerritories_QueryForEntityDelegate Is Nothing) Then
                Me.onEndEmployeeTerritories_QueryForEntityDelegate = AddressOf Me.OnEndEmployeeTerritories_QueryForEntity
            End If
            If (Me.onEmployeeTerritories_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onEmployeeTerritories_QueryForEntityCompletedDelegate = AddressOf Me.OnEmployeeTerritories_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployeeTerritories_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndEmployeeTerritories_QueryForEntityDelegate, Me.onEmployeeTerritories_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployeeTerritories_GetByPrimaryKey(ByVal employeeID As Integer, ByVal territoryID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_GetByPrimaryKey
            Return MyBase.Channel.BeginEmployeeTerritories_GetByPrimaryKey(employeeID, territoryID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployeeTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub Implements INorthwind.EndEmployeeTerritories_GetByPrimaryKey
            Return MyBase.Channel.EndEmployeeTerritories_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginEmployeeTerritories_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim employeeID As Integer = CType(inValues(0), Integer)
            Dim territoryID As String = CType(inValues(1), String)
            Return CType(Me, INorthwind).BeginEmployeeTerritories_GetByPrimaryKey(employeeID, territoryID, callback, asyncState)
        End Function

        Private Function OnEndEmployeeTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeeTerritoriesProxyStub = CType(Me, INorthwind).EndEmployeeTerritories_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployeeTerritories_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.EmployeeTerritories_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent EmployeeTerritories_GetByPrimaryKeyCompleted(Me, New EmployeeTerritories_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub EmployeeTerritories_GetByPrimaryKeyAsync(ByVal employeeID As Integer, ByVal territoryID As String)
            Me.EmployeeTerritories_GetByPrimaryKeyAsync(employeeID, territoryID, Nothing)
        End Sub

        Public Overloads Sub EmployeeTerritories_GetByPrimaryKeyAsync(ByVal employeeID As Integer, ByVal territoryID As String, ByVal userState As Object)
            If (Me.onBeginEmployeeTerritories_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginEmployeeTerritories_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginEmployeeTerritories_GetByPrimaryKey
            End If
            If (Me.onEndEmployeeTerritories_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndEmployeeTerritories_GetByPrimaryKeyDelegate = AddressOf Me.OnEndEmployeeTerritories_GetByPrimaryKey
            End If
            If (Me.onEmployeeTerritories_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onEmployeeTerritories_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnEmployeeTerritories_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployeeTerritories_GetByPrimaryKeyDelegate, New Object() {employeeID, territoryID}, Me.onEndEmployeeTerritories_GetByPrimaryKeyDelegate, Me.onEmployeeTerritories_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployeeTerritories_SaveCollection(ByVal collection As Proxies.EmployeeTerritoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_SaveCollection
            Return MyBase.Channel.BeginEmployeeTerritories_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployeeTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub Implements INorthwind.EndEmployeeTerritories_SaveCollection
            Return MyBase.Channel.EndEmployeeTerritories_SaveCollection(result)
        End Function

        Private Function OnBeginEmployeeTerritories_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.EmployeeTerritoriesCollectionProxyStub = CType(inValues(0), Proxies.EmployeeTerritoriesCollectionProxyStub)
            Return CType(Me, INorthwind).BeginEmployeeTerritories_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndEmployeeTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeeTerritoriesCollectionProxyStub = CType(Me, INorthwind).EndEmployeeTerritories_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployeeTerritories_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.EmployeeTerritories_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent EmployeeTerritories_SaveCollectionCompleted(Me, New EmployeeTerritories_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub EmployeeTerritories_SaveCollectionAsync(ByVal collection As Proxies.EmployeeTerritoriesCollectionProxyStub)
            Me.EmployeeTerritories_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub EmployeeTerritories_SaveCollectionAsync(ByVal collection As Proxies.EmployeeTerritoriesCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginEmployeeTerritories_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginEmployeeTerritories_SaveCollectionDelegate = AddressOf Me.OnBeginEmployeeTerritories_SaveCollection
            End If
            If (Me.onEndEmployeeTerritories_SaveCollectionDelegate Is Nothing) Then
                Me.onEndEmployeeTerritories_SaveCollectionDelegate = AddressOf Me.OnEndEmployeeTerritories_SaveCollection
            End If
            If (Me.onEmployeeTerritories_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onEmployeeTerritories_SaveCollectionCompletedDelegate = AddressOf Me.OnEmployeeTerritories_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployeeTerritories_SaveCollectionDelegate, New Object() {collection}, Me.onEndEmployeeTerritories_SaveCollectionDelegate, Me.onEmployeeTerritories_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployeeTerritories_SaveEntity(ByVal entity As Proxies.EmployeeTerritoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_SaveEntity
            Return MyBase.Channel.BeginEmployeeTerritories_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployeeTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub Implements INorthwind.EndEmployeeTerritories_SaveEntity
            Return MyBase.Channel.EndEmployeeTerritories_SaveEntity(result)
        End Function

        Private Function OnBeginEmployeeTerritories_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.EmployeeTerritoriesProxyStub = CType(inValues(0), Proxies.EmployeeTerritoriesProxyStub)
            Return CType(Me, INorthwind).BeginEmployeeTerritories_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndEmployeeTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeeTerritoriesProxyStub = CType(Me, INorthwind).EndEmployeeTerritories_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployeeTerritories_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.EmployeeTerritories_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent EmployeeTerritories_SaveEntityCompleted(Me, New EmployeeTerritories_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub EmployeeTerritories_SaveEntityAsync(ByVal entity As Proxies.EmployeeTerritoriesProxyStub)
            Me.EmployeeTerritories_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub EmployeeTerritories_SaveEntityAsync(ByVal entity As Proxies.EmployeeTerritoriesProxyStub, ByVal userState As Object)
            If (Me.onBeginEmployeeTerritories_SaveEntityDelegate Is Nothing) Then
                Me.onBeginEmployeeTerritories_SaveEntityDelegate = AddressOf Me.OnBeginEmployeeTerritories_SaveEntity
            End If
            If (Me.onEndEmployeeTerritories_SaveEntityDelegate Is Nothing) Then
                Me.onEndEmployeeTerritories_SaveEntityDelegate = AddressOf Me.OnEndEmployeeTerritories_SaveEntity
            End If
            If (Me.onEmployeeTerritories_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onEmployeeTerritories_SaveEntityCompletedDelegate = AddressOf Me.OnEmployeeTerritories_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployeeTerritories_SaveEntityDelegate, New Object() {entity}, Me.onEndEmployeeTerritories_SaveEntityDelegate, Me.onEmployeeTerritories_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrderDetails_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_LoadAll
            Return MyBase.Channel.BeginOrderDetails_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrderDetails_LoadAll(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub Implements INorthwind.EndOrderDetails_LoadAll
            Return MyBase.Channel.EndOrderDetails_LoadAll(result)
        End Function

        Private Function OnBeginOrderDetails_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginOrderDetails_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndOrderDetails_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrderDetailsCollectionProxyStub = CType(Me, INorthwind).EndOrderDetails_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrderDetails_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.OrderDetails_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent OrderDetails_LoadAllCompleted(Me, New OrderDetails_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub OrderDetails_LoadAllAsync()
            Me.OrderDetails_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub OrderDetails_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginOrderDetails_LoadAllDelegate Is Nothing) Then
                Me.onBeginOrderDetails_LoadAllDelegate = AddressOf Me.OnBeginOrderDetails_LoadAll
            End If
            If (Me.onEndOrderDetails_LoadAllDelegate Is Nothing) Then
                Me.onEndOrderDetails_LoadAllDelegate = AddressOf Me.OnEndOrderDetails_LoadAll
            End If
            If (Me.onOrderDetails_LoadAllCompletedDelegate Is Nothing) Then
                Me.onOrderDetails_LoadAllCompletedDelegate = AddressOf Me.OnOrderDetails_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrderDetails_LoadAllDelegate, Nothing, Me.onEndOrderDetails_LoadAllDelegate, Me.onOrderDetails_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrderDetails_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_QueryForCollection
            Return MyBase.Channel.BeginOrderDetails_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrderDetails_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub Implements INorthwind.EndOrderDetails_QueryForCollection
            Return MyBase.Channel.EndOrderDetails_QueryForCollection(result)
        End Function

        Private Function OnBeginOrderDetails_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginOrderDetails_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndOrderDetails_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrderDetailsCollectionProxyStub = CType(Me, INorthwind).EndOrderDetails_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrderDetails_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.OrderDetails_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent OrderDetails_QueryForCollectionCompleted(Me, New OrderDetails_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub OrderDetails_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.OrderDetails_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub OrderDetails_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginOrderDetails_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginOrderDetails_QueryForCollectionDelegate = AddressOf Me.OnBeginOrderDetails_QueryForCollection
            End If
            If (Me.onEndOrderDetails_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndOrderDetails_QueryForCollectionDelegate = AddressOf Me.OnEndOrderDetails_QueryForCollection
            End If
            If (Me.onOrderDetails_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onOrderDetails_QueryForCollectionCompletedDelegate = AddressOf Me.OnOrderDetails_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrderDetails_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndOrderDetails_QueryForCollectionDelegate, Me.onOrderDetails_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrderDetails_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_QueryForEntity
            Return MyBase.Channel.BeginOrderDetails_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrderDetails_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub Implements INorthwind.EndOrderDetails_QueryForEntity
            Return MyBase.Channel.EndOrderDetails_QueryForEntity(result)
        End Function

        Private Function OnBeginOrderDetails_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginOrderDetails_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndOrderDetails_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrderDetailsProxyStub = CType(Me, INorthwind).EndOrderDetails_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrderDetails_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.OrderDetails_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent OrderDetails_QueryForEntityCompleted(Me, New OrderDetails_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub OrderDetails_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.OrderDetails_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub OrderDetails_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginOrderDetails_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginOrderDetails_QueryForEntityDelegate = AddressOf Me.OnBeginOrderDetails_QueryForEntity
            End If
            If (Me.onEndOrderDetails_QueryForEntityDelegate Is Nothing) Then
                Me.onEndOrderDetails_QueryForEntityDelegate = AddressOf Me.OnEndOrderDetails_QueryForEntity
            End If
            If (Me.onOrderDetails_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onOrderDetails_QueryForEntityCompletedDelegate = AddressOf Me.OnOrderDetails_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrderDetails_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndOrderDetails_QueryForEntityDelegate, Me.onOrderDetails_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrderDetails_GetByPrimaryKey(ByVal orderID As Integer, ByVal productID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_GetByPrimaryKey
            Return MyBase.Channel.BeginOrderDetails_GetByPrimaryKey(orderID, productID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrderDetails_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub Implements INorthwind.EndOrderDetails_GetByPrimaryKey
            Return MyBase.Channel.EndOrderDetails_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginOrderDetails_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim orderID As Integer = CType(inValues(0), Integer)
            Dim productID As Integer = CType(inValues(1), Integer)
            Return CType(Me, INorthwind).BeginOrderDetails_GetByPrimaryKey(orderID, productID, callback, asyncState)
        End Function

        Private Function OnEndOrderDetails_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrderDetailsProxyStub = CType(Me, INorthwind).EndOrderDetails_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrderDetails_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.OrderDetails_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent OrderDetails_GetByPrimaryKeyCompleted(Me, New OrderDetails_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub OrderDetails_GetByPrimaryKeyAsync(ByVal orderID As Integer, ByVal productID As Integer)
            Me.OrderDetails_GetByPrimaryKeyAsync(orderID, productID, Nothing)
        End Sub

        Public Overloads Sub OrderDetails_GetByPrimaryKeyAsync(ByVal orderID As Integer, ByVal productID As Integer, ByVal userState As Object)
            If (Me.onBeginOrderDetails_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginOrderDetails_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginOrderDetails_GetByPrimaryKey
            End If
            If (Me.onEndOrderDetails_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndOrderDetails_GetByPrimaryKeyDelegate = AddressOf Me.OnEndOrderDetails_GetByPrimaryKey
            End If
            If (Me.onOrderDetails_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onOrderDetails_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnOrderDetails_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrderDetails_GetByPrimaryKeyDelegate, New Object() {orderID, productID}, Me.onEndOrderDetails_GetByPrimaryKeyDelegate, Me.onOrderDetails_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrderDetails_SaveCollection(ByVal collection As Proxies.OrderDetailsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_SaveCollection
            Return MyBase.Channel.BeginOrderDetails_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrderDetails_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub Implements INorthwind.EndOrderDetails_SaveCollection
            Return MyBase.Channel.EndOrderDetails_SaveCollection(result)
        End Function

        Private Function OnBeginOrderDetails_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.OrderDetailsCollectionProxyStub = CType(inValues(0), Proxies.OrderDetailsCollectionProxyStub)
            Return CType(Me, INorthwind).BeginOrderDetails_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndOrderDetails_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrderDetailsCollectionProxyStub = CType(Me, INorthwind).EndOrderDetails_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrderDetails_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.OrderDetails_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent OrderDetails_SaveCollectionCompleted(Me, New OrderDetails_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub OrderDetails_SaveCollectionAsync(ByVal collection As Proxies.OrderDetailsCollectionProxyStub)
            Me.OrderDetails_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub OrderDetails_SaveCollectionAsync(ByVal collection As Proxies.OrderDetailsCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginOrderDetails_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginOrderDetails_SaveCollectionDelegate = AddressOf Me.OnBeginOrderDetails_SaveCollection
            End If
            If (Me.onEndOrderDetails_SaveCollectionDelegate Is Nothing) Then
                Me.onEndOrderDetails_SaveCollectionDelegate = AddressOf Me.OnEndOrderDetails_SaveCollection
            End If
            If (Me.onOrderDetails_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onOrderDetails_SaveCollectionCompletedDelegate = AddressOf Me.OnOrderDetails_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrderDetails_SaveCollectionDelegate, New Object() {collection}, Me.onEndOrderDetails_SaveCollectionDelegate, Me.onOrderDetails_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrderDetails_SaveEntity(ByVal entity As Proxies.OrderDetailsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_SaveEntity
            Return MyBase.Channel.BeginOrderDetails_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrderDetails_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub Implements INorthwind.EndOrderDetails_SaveEntity
            Return MyBase.Channel.EndOrderDetails_SaveEntity(result)
        End Function

        Private Function OnBeginOrderDetails_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.OrderDetailsProxyStub = CType(inValues(0), Proxies.OrderDetailsProxyStub)
            Return CType(Me, INorthwind).BeginOrderDetails_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndOrderDetails_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrderDetailsProxyStub = CType(Me, INorthwind).EndOrderDetails_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrderDetails_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.OrderDetails_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent OrderDetails_SaveEntityCompleted(Me, New OrderDetails_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub OrderDetails_SaveEntityAsync(ByVal entity As Proxies.OrderDetailsProxyStub)
            Me.OrderDetails_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub OrderDetails_SaveEntityAsync(ByVal entity As Proxies.OrderDetailsProxyStub, ByVal userState As Object)
            If (Me.onBeginOrderDetails_SaveEntityDelegate Is Nothing) Then
                Me.onBeginOrderDetails_SaveEntityDelegate = AddressOf Me.OnBeginOrderDetails_SaveEntity
            End If
            If (Me.onEndOrderDetails_SaveEntityDelegate Is Nothing) Then
                Me.onEndOrderDetails_SaveEntityDelegate = AddressOf Me.OnEndOrderDetails_SaveEntity
            End If
            If (Me.onOrderDetails_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onOrderDetails_SaveEntityCompletedDelegate = AddressOf Me.OnOrderDetails_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrderDetails_SaveEntityDelegate, New Object() {entity}, Me.onEndOrderDetails_SaveEntityDelegate, Me.onOrderDetails_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrders_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_LoadAll
            Return MyBase.Channel.BeginOrders_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrders_LoadAll(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub Implements INorthwind.EndOrders_LoadAll
            Return MyBase.Channel.EndOrders_LoadAll(result)
        End Function

        Private Function OnBeginOrders_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginOrders_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndOrders_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrdersCollectionProxyStub = CType(Me, INorthwind).EndOrders_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrders_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Orders_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Orders_LoadAllCompleted(Me, New Orders_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Orders_LoadAllAsync()
            Me.Orders_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Orders_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginOrders_LoadAllDelegate Is Nothing) Then
                Me.onBeginOrders_LoadAllDelegate = AddressOf Me.OnBeginOrders_LoadAll
            End If
            If (Me.onEndOrders_LoadAllDelegate Is Nothing) Then
                Me.onEndOrders_LoadAllDelegate = AddressOf Me.OnEndOrders_LoadAll
            End If
            If (Me.onOrders_LoadAllCompletedDelegate Is Nothing) Then
                Me.onOrders_LoadAllCompletedDelegate = AddressOf Me.OnOrders_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrders_LoadAllDelegate, Nothing, Me.onEndOrders_LoadAllDelegate, Me.onOrders_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrders_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_QueryForCollection
            Return MyBase.Channel.BeginOrders_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrders_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub Implements INorthwind.EndOrders_QueryForCollection
            Return MyBase.Channel.EndOrders_QueryForCollection(result)
        End Function

        Private Function OnBeginOrders_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginOrders_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndOrders_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrdersCollectionProxyStub = CType(Me, INorthwind).EndOrders_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrders_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Orders_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Orders_QueryForCollectionCompleted(Me, New Orders_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Orders_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Orders_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Orders_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginOrders_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginOrders_QueryForCollectionDelegate = AddressOf Me.OnBeginOrders_QueryForCollection
            End If
            If (Me.onEndOrders_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndOrders_QueryForCollectionDelegate = AddressOf Me.OnEndOrders_QueryForCollection
            End If
            If (Me.onOrders_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onOrders_QueryForCollectionCompletedDelegate = AddressOf Me.OnOrders_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrders_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndOrders_QueryForCollectionDelegate, Me.onOrders_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrders_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_QueryForEntity
            Return MyBase.Channel.BeginOrders_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrders_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub Implements INorthwind.EndOrders_QueryForEntity
            Return MyBase.Channel.EndOrders_QueryForEntity(result)
        End Function

        Private Function OnBeginOrders_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginOrders_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndOrders_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrdersProxyStub = CType(Me, INorthwind).EndOrders_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrders_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Orders_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Orders_QueryForEntityCompleted(Me, New Orders_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Orders_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Orders_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Orders_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginOrders_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginOrders_QueryForEntityDelegate = AddressOf Me.OnBeginOrders_QueryForEntity
            End If
            If (Me.onEndOrders_QueryForEntityDelegate Is Nothing) Then
                Me.onEndOrders_QueryForEntityDelegate = AddressOf Me.OnEndOrders_QueryForEntity
            End If
            If (Me.onOrders_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onOrders_QueryForEntityCompletedDelegate = AddressOf Me.OnOrders_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrders_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndOrders_QueryForEntityDelegate, Me.onOrders_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrders_GetByPrimaryKey(ByVal orderID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_GetByPrimaryKey
            Return MyBase.Channel.BeginOrders_GetByPrimaryKey(orderID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrders_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub Implements INorthwind.EndOrders_GetByPrimaryKey
            Return MyBase.Channel.EndOrders_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginOrders_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim orderID As Integer = CType(inValues(0), Integer)
            Return CType(Me, INorthwind).BeginOrders_GetByPrimaryKey(orderID, callback, asyncState)
        End Function

        Private Function OnEndOrders_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrdersProxyStub = CType(Me, INorthwind).EndOrders_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrders_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Orders_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Orders_GetByPrimaryKeyCompleted(Me, New Orders_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Orders_GetByPrimaryKeyAsync(ByVal orderID As Integer)
            Me.Orders_GetByPrimaryKeyAsync(orderID, Nothing)
        End Sub

        Public Overloads Sub Orders_GetByPrimaryKeyAsync(ByVal orderID As Integer, ByVal userState As Object)
            If (Me.onBeginOrders_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginOrders_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginOrders_GetByPrimaryKey
            End If
            If (Me.onEndOrders_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndOrders_GetByPrimaryKeyDelegate = AddressOf Me.OnEndOrders_GetByPrimaryKey
            End If
            If (Me.onOrders_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onOrders_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnOrders_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrders_GetByPrimaryKeyDelegate, New Object() {orderID}, Me.onEndOrders_GetByPrimaryKeyDelegate, Me.onOrders_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrders_SaveCollection(ByVal collection As Proxies.OrdersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_SaveCollection
            Return MyBase.Channel.BeginOrders_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrders_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub Implements INorthwind.EndOrders_SaveCollection
            Return MyBase.Channel.EndOrders_SaveCollection(result)
        End Function

        Private Function OnBeginOrders_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.OrdersCollectionProxyStub = CType(inValues(0), Proxies.OrdersCollectionProxyStub)
            Return CType(Me, INorthwind).BeginOrders_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndOrders_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrdersCollectionProxyStub = CType(Me, INorthwind).EndOrders_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrders_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Orders_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Orders_SaveCollectionCompleted(Me, New Orders_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Orders_SaveCollectionAsync(ByVal collection As Proxies.OrdersCollectionProxyStub)
            Me.Orders_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Orders_SaveCollectionAsync(ByVal collection As Proxies.OrdersCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginOrders_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginOrders_SaveCollectionDelegate = AddressOf Me.OnBeginOrders_SaveCollection
            End If
            If (Me.onEndOrders_SaveCollectionDelegate Is Nothing) Then
                Me.onEndOrders_SaveCollectionDelegate = AddressOf Me.OnEndOrders_SaveCollection
            End If
            If (Me.onOrders_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onOrders_SaveCollectionCompletedDelegate = AddressOf Me.OnOrders_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrders_SaveCollectionDelegate, New Object() {collection}, Me.onEndOrders_SaveCollectionDelegate, Me.onOrders_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginOrders_SaveEntity(ByVal entity As Proxies.OrdersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_SaveEntity
            Return MyBase.Channel.BeginOrders_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndOrders_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub Implements INorthwind.EndOrders_SaveEntity
            Return MyBase.Channel.EndOrders_SaveEntity(result)
        End Function

        Private Function OnBeginOrders_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.OrdersProxyStub = CType(inValues(0), Proxies.OrdersProxyStub)
            Return CType(Me, INorthwind).BeginOrders_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndOrders_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.OrdersProxyStub = CType(Me, INorthwind).EndOrders_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnOrders_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Orders_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Orders_SaveEntityCompleted(Me, New Orders_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Orders_SaveEntityAsync(ByVal entity As Proxies.OrdersProxyStub)
            Me.Orders_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Orders_SaveEntityAsync(ByVal entity As Proxies.OrdersProxyStub, ByVal userState As Object)
            If (Me.onBeginOrders_SaveEntityDelegate Is Nothing) Then
                Me.onBeginOrders_SaveEntityDelegate = AddressOf Me.OnBeginOrders_SaveEntity
            End If
            If (Me.onEndOrders_SaveEntityDelegate Is Nothing) Then
                Me.onEndOrders_SaveEntityDelegate = AddressOf Me.OnEndOrders_SaveEntity
            End If
            If (Me.onOrders_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onOrders_SaveEntityCompletedDelegate = AddressOf Me.OnOrders_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOrders_SaveEntityDelegate, New Object() {entity}, Me.onEndOrders_SaveEntityDelegate, Me.onOrders_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginProducts_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_LoadAll
            Return MyBase.Channel.BeginProducts_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndProducts_LoadAll(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub Implements INorthwind.EndProducts_LoadAll
            Return MyBase.Channel.EndProducts_LoadAll(result)
        End Function

        Private Function OnBeginProducts_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginProducts_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndProducts_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ProductsCollectionProxyStub = CType(Me, INorthwind).EndProducts_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnProducts_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Products_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Products_LoadAllCompleted(Me, New Products_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Products_LoadAllAsync()
            Me.Products_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Products_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginProducts_LoadAllDelegate Is Nothing) Then
                Me.onBeginProducts_LoadAllDelegate = AddressOf Me.OnBeginProducts_LoadAll
            End If
            If (Me.onEndProducts_LoadAllDelegate Is Nothing) Then
                Me.onEndProducts_LoadAllDelegate = AddressOf Me.OnEndProducts_LoadAll
            End If
            If (Me.onProducts_LoadAllCompletedDelegate Is Nothing) Then
                Me.onProducts_LoadAllCompletedDelegate = AddressOf Me.OnProducts_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginProducts_LoadAllDelegate, Nothing, Me.onEndProducts_LoadAllDelegate, Me.onProducts_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginProducts_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_QueryForCollection
            Return MyBase.Channel.BeginProducts_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndProducts_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub Implements INorthwind.EndProducts_QueryForCollection
            Return MyBase.Channel.EndProducts_QueryForCollection(result)
        End Function

        Private Function OnBeginProducts_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginProducts_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndProducts_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ProductsCollectionProxyStub = CType(Me, INorthwind).EndProducts_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnProducts_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Products_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Products_QueryForCollectionCompleted(Me, New Products_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Products_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Products_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Products_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginProducts_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginProducts_QueryForCollectionDelegate = AddressOf Me.OnBeginProducts_QueryForCollection
            End If
            If (Me.onEndProducts_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndProducts_QueryForCollectionDelegate = AddressOf Me.OnEndProducts_QueryForCollection
            End If
            If (Me.onProducts_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onProducts_QueryForCollectionCompletedDelegate = AddressOf Me.OnProducts_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginProducts_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndProducts_QueryForCollectionDelegate, Me.onProducts_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginProducts_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_QueryForEntity
            Return MyBase.Channel.BeginProducts_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndProducts_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub Implements INorthwind.EndProducts_QueryForEntity
            Return MyBase.Channel.EndProducts_QueryForEntity(result)
        End Function

        Private Function OnBeginProducts_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginProducts_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndProducts_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ProductsProxyStub = CType(Me, INorthwind).EndProducts_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnProducts_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Products_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Products_QueryForEntityCompleted(Me, New Products_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Products_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Products_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Products_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginProducts_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginProducts_QueryForEntityDelegate = AddressOf Me.OnBeginProducts_QueryForEntity
            End If
            If (Me.onEndProducts_QueryForEntityDelegate Is Nothing) Then
                Me.onEndProducts_QueryForEntityDelegate = AddressOf Me.OnEndProducts_QueryForEntity
            End If
            If (Me.onProducts_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onProducts_QueryForEntityCompletedDelegate = AddressOf Me.OnProducts_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginProducts_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndProducts_QueryForEntityDelegate, Me.onProducts_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginProducts_GetByPrimaryKey(ByVal productID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_GetByPrimaryKey
            Return MyBase.Channel.BeginProducts_GetByPrimaryKey(productID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndProducts_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub Implements INorthwind.EndProducts_GetByPrimaryKey
            Return MyBase.Channel.EndProducts_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginProducts_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim productID As Integer = CType(inValues(0), Integer)
            Return CType(Me, INorthwind).BeginProducts_GetByPrimaryKey(productID, callback, asyncState)
        End Function

        Private Function OnEndProducts_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ProductsProxyStub = CType(Me, INorthwind).EndProducts_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnProducts_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Products_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Products_GetByPrimaryKeyCompleted(Me, New Products_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Products_GetByPrimaryKeyAsync(ByVal productID As Integer)
            Me.Products_GetByPrimaryKeyAsync(productID, Nothing)
        End Sub

        Public Overloads Sub Products_GetByPrimaryKeyAsync(ByVal productID As Integer, ByVal userState As Object)
            If (Me.onBeginProducts_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginProducts_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginProducts_GetByPrimaryKey
            End If
            If (Me.onEndProducts_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndProducts_GetByPrimaryKeyDelegate = AddressOf Me.OnEndProducts_GetByPrimaryKey
            End If
            If (Me.onProducts_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onProducts_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnProducts_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginProducts_GetByPrimaryKeyDelegate, New Object() {productID}, Me.onEndProducts_GetByPrimaryKeyDelegate, Me.onProducts_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginProducts_SaveCollection(ByVal collection As Proxies.ProductsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_SaveCollection
            Return MyBase.Channel.BeginProducts_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndProducts_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub Implements INorthwind.EndProducts_SaveCollection
            Return MyBase.Channel.EndProducts_SaveCollection(result)
        End Function

        Private Function OnBeginProducts_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.ProductsCollectionProxyStub = CType(inValues(0), Proxies.ProductsCollectionProxyStub)
            Return CType(Me, INorthwind).BeginProducts_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndProducts_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ProductsCollectionProxyStub = CType(Me, INorthwind).EndProducts_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnProducts_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Products_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Products_SaveCollectionCompleted(Me, New Products_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Products_SaveCollectionAsync(ByVal collection As Proxies.ProductsCollectionProxyStub)
            Me.Products_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Products_SaveCollectionAsync(ByVal collection As Proxies.ProductsCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginProducts_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginProducts_SaveCollectionDelegate = AddressOf Me.OnBeginProducts_SaveCollection
            End If
            If (Me.onEndProducts_SaveCollectionDelegate Is Nothing) Then
                Me.onEndProducts_SaveCollectionDelegate = AddressOf Me.OnEndProducts_SaveCollection
            End If
            If (Me.onProducts_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onProducts_SaveCollectionCompletedDelegate = AddressOf Me.OnProducts_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginProducts_SaveCollectionDelegate, New Object() {collection}, Me.onEndProducts_SaveCollectionDelegate, Me.onProducts_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginProducts_SaveEntity(ByVal entity As Proxies.ProductsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_SaveEntity
            Return MyBase.Channel.BeginProducts_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndProducts_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub Implements INorthwind.EndProducts_SaveEntity
            Return MyBase.Channel.EndProducts_SaveEntity(result)
        End Function

        Private Function OnBeginProducts_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.ProductsProxyStub = CType(inValues(0), Proxies.ProductsProxyStub)
            Return CType(Me, INorthwind).BeginProducts_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndProducts_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ProductsProxyStub = CType(Me, INorthwind).EndProducts_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnProducts_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Products_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Products_SaveEntityCompleted(Me, New Products_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Products_SaveEntityAsync(ByVal entity As Proxies.ProductsProxyStub)
            Me.Products_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Products_SaveEntityAsync(ByVal entity As Proxies.ProductsProxyStub, ByVal userState As Object)
            If (Me.onBeginProducts_SaveEntityDelegate Is Nothing) Then
                Me.onBeginProducts_SaveEntityDelegate = AddressOf Me.OnBeginProducts_SaveEntity
            End If
            If (Me.onEndProducts_SaveEntityDelegate Is Nothing) Then
                Me.onEndProducts_SaveEntityDelegate = AddressOf Me.OnEndProducts_SaveEntity
            End If
            If (Me.onProducts_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onProducts_SaveEntityCompletedDelegate = AddressOf Me.OnProducts_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginProducts_SaveEntityDelegate, New Object() {entity}, Me.onEndProducts_SaveEntityDelegate, Me.onProducts_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginRegion_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_LoadAll
            Return MyBase.Channel.BeginRegion_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndRegion_LoadAll(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub Implements INorthwind.EndRegion_LoadAll
            Return MyBase.Channel.EndRegion_LoadAll(result)
        End Function

        Private Function OnBeginRegion_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginRegion_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndRegion_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.RegionCollectionProxyStub = CType(Me, INorthwind).EndRegion_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnRegion_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Region_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Region_LoadAllCompleted(Me, New Region_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Region_LoadAllAsync()
            Me.Region_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Region_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginRegion_LoadAllDelegate Is Nothing) Then
                Me.onBeginRegion_LoadAllDelegate = AddressOf Me.OnBeginRegion_LoadAll
            End If
            If (Me.onEndRegion_LoadAllDelegate Is Nothing) Then
                Me.onEndRegion_LoadAllDelegate = AddressOf Me.OnEndRegion_LoadAll
            End If
            If (Me.onRegion_LoadAllCompletedDelegate Is Nothing) Then
                Me.onRegion_LoadAllCompletedDelegate = AddressOf Me.OnRegion_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRegion_LoadAllDelegate, Nothing, Me.onEndRegion_LoadAllDelegate, Me.onRegion_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginRegion_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_QueryForCollection
            Return MyBase.Channel.BeginRegion_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndRegion_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub Implements INorthwind.EndRegion_QueryForCollection
            Return MyBase.Channel.EndRegion_QueryForCollection(result)
        End Function

        Private Function OnBeginRegion_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginRegion_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndRegion_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.RegionCollectionProxyStub = CType(Me, INorthwind).EndRegion_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnRegion_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Region_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Region_QueryForCollectionCompleted(Me, New Region_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Region_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Region_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Region_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginRegion_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginRegion_QueryForCollectionDelegate = AddressOf Me.OnBeginRegion_QueryForCollection
            End If
            If (Me.onEndRegion_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndRegion_QueryForCollectionDelegate = AddressOf Me.OnEndRegion_QueryForCollection
            End If
            If (Me.onRegion_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onRegion_QueryForCollectionCompletedDelegate = AddressOf Me.OnRegion_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRegion_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndRegion_QueryForCollectionDelegate, Me.onRegion_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginRegion_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_QueryForEntity
            Return MyBase.Channel.BeginRegion_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndRegion_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub Implements INorthwind.EndRegion_QueryForEntity
            Return MyBase.Channel.EndRegion_QueryForEntity(result)
        End Function

        Private Function OnBeginRegion_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginRegion_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndRegion_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.RegionProxyStub = CType(Me, INorthwind).EndRegion_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnRegion_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Region_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Region_QueryForEntityCompleted(Me, New Region_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Region_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Region_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Region_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginRegion_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginRegion_QueryForEntityDelegate = AddressOf Me.OnBeginRegion_QueryForEntity
            End If
            If (Me.onEndRegion_QueryForEntityDelegate Is Nothing) Then
                Me.onEndRegion_QueryForEntityDelegate = AddressOf Me.OnEndRegion_QueryForEntity
            End If
            If (Me.onRegion_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onRegion_QueryForEntityCompletedDelegate = AddressOf Me.OnRegion_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRegion_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndRegion_QueryForEntityDelegate, Me.onRegion_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginRegion_GetByPrimaryKey(ByVal regionID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_GetByPrimaryKey
            Return MyBase.Channel.BeginRegion_GetByPrimaryKey(regionID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndRegion_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub Implements INorthwind.EndRegion_GetByPrimaryKey
            Return MyBase.Channel.EndRegion_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginRegion_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim regionID As Integer = CType(inValues(0), Integer)
            Return CType(Me, INorthwind).BeginRegion_GetByPrimaryKey(regionID, callback, asyncState)
        End Function

        Private Function OnEndRegion_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.RegionProxyStub = CType(Me, INorthwind).EndRegion_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnRegion_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Region_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Region_GetByPrimaryKeyCompleted(Me, New Region_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Region_GetByPrimaryKeyAsync(ByVal regionID As Integer)
            Me.Region_GetByPrimaryKeyAsync(regionID, Nothing)
        End Sub

        Public Overloads Sub Region_GetByPrimaryKeyAsync(ByVal regionID As Integer, ByVal userState As Object)
            If (Me.onBeginRegion_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginRegion_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginRegion_GetByPrimaryKey
            End If
            If (Me.onEndRegion_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndRegion_GetByPrimaryKeyDelegate = AddressOf Me.OnEndRegion_GetByPrimaryKey
            End If
            If (Me.onRegion_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onRegion_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnRegion_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRegion_GetByPrimaryKeyDelegate, New Object() {regionID}, Me.onEndRegion_GetByPrimaryKeyDelegate, Me.onRegion_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginRegion_SaveCollection(ByVal collection As Proxies.RegionCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_SaveCollection
            Return MyBase.Channel.BeginRegion_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndRegion_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub Implements INorthwind.EndRegion_SaveCollection
            Return MyBase.Channel.EndRegion_SaveCollection(result)
        End Function

        Private Function OnBeginRegion_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.RegionCollectionProxyStub = CType(inValues(0), Proxies.RegionCollectionProxyStub)
            Return CType(Me, INorthwind).BeginRegion_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndRegion_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.RegionCollectionProxyStub = CType(Me, INorthwind).EndRegion_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnRegion_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Region_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Region_SaveCollectionCompleted(Me, New Region_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Region_SaveCollectionAsync(ByVal collection As Proxies.RegionCollectionProxyStub)
            Me.Region_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Region_SaveCollectionAsync(ByVal collection As Proxies.RegionCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginRegion_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginRegion_SaveCollectionDelegate = AddressOf Me.OnBeginRegion_SaveCollection
            End If
            If (Me.onEndRegion_SaveCollectionDelegate Is Nothing) Then
                Me.onEndRegion_SaveCollectionDelegate = AddressOf Me.OnEndRegion_SaveCollection
            End If
            If (Me.onRegion_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onRegion_SaveCollectionCompletedDelegate = AddressOf Me.OnRegion_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRegion_SaveCollectionDelegate, New Object() {collection}, Me.onEndRegion_SaveCollectionDelegate, Me.onRegion_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginRegion_SaveEntity(ByVal entity As Proxies.RegionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_SaveEntity
            Return MyBase.Channel.BeginRegion_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndRegion_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub Implements INorthwind.EndRegion_SaveEntity
            Return MyBase.Channel.EndRegion_SaveEntity(result)
        End Function

        Private Function OnBeginRegion_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.RegionProxyStub = CType(inValues(0), Proxies.RegionProxyStub)
            Return CType(Me, INorthwind).BeginRegion_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndRegion_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.RegionProxyStub = CType(Me, INorthwind).EndRegion_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnRegion_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Region_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Region_SaveEntityCompleted(Me, New Region_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Region_SaveEntityAsync(ByVal entity As Proxies.RegionProxyStub)
            Me.Region_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Region_SaveEntityAsync(ByVal entity As Proxies.RegionProxyStub, ByVal userState As Object)
            If (Me.onBeginRegion_SaveEntityDelegate Is Nothing) Then
                Me.onBeginRegion_SaveEntityDelegate = AddressOf Me.OnBeginRegion_SaveEntity
            End If
            If (Me.onEndRegion_SaveEntityDelegate Is Nothing) Then
                Me.onEndRegion_SaveEntityDelegate = AddressOf Me.OnEndRegion_SaveEntity
            End If
            If (Me.onRegion_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onRegion_SaveEntityCompletedDelegate = AddressOf Me.OnRegion_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginRegion_SaveEntityDelegate, New Object() {entity}, Me.onEndRegion_SaveEntityDelegate, Me.onRegion_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginShippers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_LoadAll
            Return MyBase.Channel.BeginShippers_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndShippers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub Implements INorthwind.EndShippers_LoadAll
            Return MyBase.Channel.EndShippers_LoadAll(result)
        End Function

        Private Function OnBeginShippers_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginShippers_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndShippers_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ShippersCollectionProxyStub = CType(Me, INorthwind).EndShippers_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnShippers_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Shippers_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Shippers_LoadAllCompleted(Me, New Shippers_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Shippers_LoadAllAsync()
            Me.Shippers_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Shippers_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginShippers_LoadAllDelegate Is Nothing) Then
                Me.onBeginShippers_LoadAllDelegate = AddressOf Me.OnBeginShippers_LoadAll
            End If
            If (Me.onEndShippers_LoadAllDelegate Is Nothing) Then
                Me.onEndShippers_LoadAllDelegate = AddressOf Me.OnEndShippers_LoadAll
            End If
            If (Me.onShippers_LoadAllCompletedDelegate Is Nothing) Then
                Me.onShippers_LoadAllCompletedDelegate = AddressOf Me.OnShippers_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginShippers_LoadAllDelegate, Nothing, Me.onEndShippers_LoadAllDelegate, Me.onShippers_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginShippers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_QueryForCollection
            Return MyBase.Channel.BeginShippers_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndShippers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub Implements INorthwind.EndShippers_QueryForCollection
            Return MyBase.Channel.EndShippers_QueryForCollection(result)
        End Function

        Private Function OnBeginShippers_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginShippers_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndShippers_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ShippersCollectionProxyStub = CType(Me, INorthwind).EndShippers_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnShippers_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Shippers_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Shippers_QueryForCollectionCompleted(Me, New Shippers_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Shippers_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Shippers_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Shippers_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginShippers_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginShippers_QueryForCollectionDelegate = AddressOf Me.OnBeginShippers_QueryForCollection
            End If
            If (Me.onEndShippers_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndShippers_QueryForCollectionDelegate = AddressOf Me.OnEndShippers_QueryForCollection
            End If
            If (Me.onShippers_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onShippers_QueryForCollectionCompletedDelegate = AddressOf Me.OnShippers_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginShippers_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndShippers_QueryForCollectionDelegate, Me.onShippers_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginShippers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_QueryForEntity
            Return MyBase.Channel.BeginShippers_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndShippers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub Implements INorthwind.EndShippers_QueryForEntity
            Return MyBase.Channel.EndShippers_QueryForEntity(result)
        End Function

        Private Function OnBeginShippers_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginShippers_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndShippers_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ShippersProxyStub = CType(Me, INorthwind).EndShippers_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnShippers_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Shippers_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Shippers_QueryForEntityCompleted(Me, New Shippers_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Shippers_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Shippers_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Shippers_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginShippers_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginShippers_QueryForEntityDelegate = AddressOf Me.OnBeginShippers_QueryForEntity
            End If
            If (Me.onEndShippers_QueryForEntityDelegate Is Nothing) Then
                Me.onEndShippers_QueryForEntityDelegate = AddressOf Me.OnEndShippers_QueryForEntity
            End If
            If (Me.onShippers_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onShippers_QueryForEntityCompletedDelegate = AddressOf Me.OnShippers_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginShippers_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndShippers_QueryForEntityDelegate, Me.onShippers_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginShippers_GetByPrimaryKey(ByVal shipperID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_GetByPrimaryKey
            Return MyBase.Channel.BeginShippers_GetByPrimaryKey(shipperID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndShippers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub Implements INorthwind.EndShippers_GetByPrimaryKey
            Return MyBase.Channel.EndShippers_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginShippers_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim shipperID As Integer = CType(inValues(0), Integer)
            Return CType(Me, INorthwind).BeginShippers_GetByPrimaryKey(shipperID, callback, asyncState)
        End Function

        Private Function OnEndShippers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.ShippersProxyStub = CType(Me, INorthwind).EndShippers_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnShippers_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Shippers_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Shippers_GetByPrimaryKeyCompleted(Me, New Shippers_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Shippers_GetByPrimaryKeyAsync(ByVal shipperID As Integer)
            Me.Shippers_GetByPrimaryKeyAsync(shipperID, Nothing)
        End Sub

        Public Overloads Sub Shippers_GetByPrimaryKeyAsync(ByVal shipperID As Integer, ByVal userState As Object)
            If (Me.onBeginShippers_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginShippers_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginShippers_GetByPrimaryKey
            End If
            If (Me.onEndShippers_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndShippers_GetByPrimaryKeyDelegate = AddressOf Me.OnEndShippers_GetByPrimaryKey
            End If
            If (Me.onShippers_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onShippers_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnShippers_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginShippers_GetByPrimaryKeyDelegate, New Object() {shipperID}, Me.onEndShippers_GetByPrimaryKeyDelegate, Me.onShippers_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCategories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_LoadAll
            Return MyBase.Channel.BeginCategories_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCategories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub Implements INorthwind.EndCategories_LoadAll
            Return MyBase.Channel.EndCategories_LoadAll(result)
        End Function

        Private Function OnBeginCategories_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginCategories_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndCategories_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CategoriesCollectionProxyStub = CType(Me, INorthwind).EndCategories_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCategories_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Categories_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Categories_LoadAllCompleted(Me, New Categories_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Categories_LoadAllAsync()
            Me.Categories_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Categories_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginCategories_LoadAllDelegate Is Nothing) Then
                Me.onBeginCategories_LoadAllDelegate = AddressOf Me.OnBeginCategories_LoadAll
            End If
            If (Me.onEndCategories_LoadAllDelegate Is Nothing) Then
                Me.onEndCategories_LoadAllDelegate = AddressOf Me.OnEndCategories_LoadAll
            End If
            If (Me.onCategories_LoadAllCompletedDelegate Is Nothing) Then
                Me.onCategories_LoadAllCompletedDelegate = AddressOf Me.OnCategories_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCategories_LoadAllDelegate, Nothing, Me.onEndCategories_LoadAllDelegate, Me.onCategories_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCategories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_QueryForCollection
            Return MyBase.Channel.BeginCategories_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCategories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub Implements INorthwind.EndCategories_QueryForCollection
            Return MyBase.Channel.EndCategories_QueryForCollection(result)
        End Function

        Private Function OnBeginCategories_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCategories_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCategories_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CategoriesCollectionProxyStub = CType(Me, INorthwind).EndCategories_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCategories_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Categories_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Categories_QueryForCollectionCompleted(Me, New Categories_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Categories_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Categories_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Categories_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCategories_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginCategories_QueryForCollectionDelegate = AddressOf Me.OnBeginCategories_QueryForCollection
            End If
            If (Me.onEndCategories_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndCategories_QueryForCollectionDelegate = AddressOf Me.OnEndCategories_QueryForCollection
            End If
            If (Me.onCategories_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onCategories_QueryForCollectionCompletedDelegate = AddressOf Me.OnCategories_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCategories_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndCategories_QueryForCollectionDelegate, Me.onCategories_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCategories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_QueryForEntity
            Return MyBase.Channel.BeginCategories_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCategories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub Implements INorthwind.EndCategories_QueryForEntity
            Return MyBase.Channel.EndCategories_QueryForEntity(result)
        End Function

        Private Function OnBeginCategories_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCategories_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCategories_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CategoriesProxyStub = CType(Me, INorthwind).EndCategories_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCategories_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Categories_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Categories_QueryForEntityCompleted(Me, New Categories_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Categories_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Categories_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Categories_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCategories_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginCategories_QueryForEntityDelegate = AddressOf Me.OnBeginCategories_QueryForEntity
            End If
            If (Me.onEndCategories_QueryForEntityDelegate Is Nothing) Then
                Me.onEndCategories_QueryForEntityDelegate = AddressOf Me.OnEndCategories_QueryForEntity
            End If
            If (Me.onCategories_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onCategories_QueryForEntityCompletedDelegate = AddressOf Me.OnCategories_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCategories_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndCategories_QueryForEntityDelegate, Me.onCategories_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCategories_GetByPrimaryKey(ByVal categoryID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_GetByPrimaryKey
            Return MyBase.Channel.BeginCategories_GetByPrimaryKey(categoryID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCategories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub Implements INorthwind.EndCategories_GetByPrimaryKey
            Return MyBase.Channel.EndCategories_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginCategories_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim categoryID As Integer = CType(inValues(0), Integer)
            Return CType(Me, INorthwind).BeginCategories_GetByPrimaryKey(categoryID, callback, asyncState)
        End Function

        Private Function OnEndCategories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CategoriesProxyStub = CType(Me, INorthwind).EndCategories_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCategories_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Categories_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Categories_GetByPrimaryKeyCompleted(Me, New Categories_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Categories_GetByPrimaryKeyAsync(ByVal categoryID As Integer)
            Me.Categories_GetByPrimaryKeyAsync(categoryID, Nothing)
        End Sub

        Public Overloads Sub Categories_GetByPrimaryKeyAsync(ByVal categoryID As Integer, ByVal userState As Object)
            If (Me.onBeginCategories_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginCategories_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginCategories_GetByPrimaryKey
            End If
            If (Me.onEndCategories_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndCategories_GetByPrimaryKeyDelegate = AddressOf Me.OnEndCategories_GetByPrimaryKey
            End If
            If (Me.onCategories_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onCategories_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnCategories_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCategories_GetByPrimaryKeyDelegate, New Object() {categoryID}, Me.onEndCategories_GetByPrimaryKeyDelegate, Me.onCategories_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCategories_SaveCollection(ByVal collection As Proxies.CategoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_SaveCollection
            Return MyBase.Channel.BeginCategories_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCategories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub Implements INorthwind.EndCategories_SaveCollection
            Return MyBase.Channel.EndCategories_SaveCollection(result)
        End Function

        Private Function OnBeginCategories_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.CategoriesCollectionProxyStub = CType(inValues(0), Proxies.CategoriesCollectionProxyStub)
            Return CType(Me, INorthwind).BeginCategories_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndCategories_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CategoriesCollectionProxyStub = CType(Me, INorthwind).EndCategories_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCategories_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Categories_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Categories_SaveCollectionCompleted(Me, New Categories_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Categories_SaveCollectionAsync(ByVal collection As Proxies.CategoriesCollectionProxyStub)
            Me.Categories_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Categories_SaveCollectionAsync(ByVal collection As Proxies.CategoriesCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginCategories_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginCategories_SaveCollectionDelegate = AddressOf Me.OnBeginCategories_SaveCollection
            End If
            If (Me.onEndCategories_SaveCollectionDelegate Is Nothing) Then
                Me.onEndCategories_SaveCollectionDelegate = AddressOf Me.OnEndCategories_SaveCollection
            End If
            If (Me.onCategories_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onCategories_SaveCollectionCompletedDelegate = AddressOf Me.OnCategories_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCategories_SaveCollectionDelegate, New Object() {collection}, Me.onEndCategories_SaveCollectionDelegate, Me.onCategories_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCategories_SaveEntity(ByVal entity As Proxies.CategoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_SaveEntity
            Return MyBase.Channel.BeginCategories_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCategories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub Implements INorthwind.EndCategories_SaveEntity
            Return MyBase.Channel.EndCategories_SaveEntity(result)
        End Function

        Private Function OnBeginCategories_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.CategoriesProxyStub = CType(inValues(0), Proxies.CategoriesProxyStub)
            Return CType(Me, INorthwind).BeginCategories_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndCategories_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CategoriesProxyStub = CType(Me, INorthwind).EndCategories_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCategories_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Categories_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Categories_SaveEntityCompleted(Me, New Categories_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Categories_SaveEntityAsync(ByVal entity As Proxies.CategoriesProxyStub)
            Me.Categories_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Categories_SaveEntityAsync(ByVal entity As Proxies.CategoriesProxyStub, ByVal userState As Object)
            If (Me.onBeginCategories_SaveEntityDelegate Is Nothing) Then
                Me.onBeginCategories_SaveEntityDelegate = AddressOf Me.OnBeginCategories_SaveEntity
            End If
            If (Me.onEndCategories_SaveEntityDelegate Is Nothing) Then
                Me.onEndCategories_SaveEntityDelegate = AddressOf Me.OnEndCategories_SaveEntity
            End If
            If (Me.onCategories_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onCategories_SaveEntityCompletedDelegate = AddressOf Me.OnCategories_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCategories_SaveEntityDelegate, New Object() {entity}, Me.onEndCategories_SaveEntityDelegate, Me.onCategories_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerCustomerDemo_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_LoadAll
            Return MyBase.Channel.BeginCustomerCustomerDemo_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerCustomerDemo_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub Implements INorthwind.EndCustomerCustomerDemo_LoadAll
            Return MyBase.Channel.EndCustomerCustomerDemo_LoadAll(result)
        End Function

        Private Function OnBeginCustomerCustomerDemo_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginCustomerCustomerDemo_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndCustomerCustomerDemo_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerCustomerDemoCollectionProxyStub = CType(Me, INorthwind).EndCustomerCustomerDemo_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerCustomerDemo_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.CustomerCustomerDemo_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerCustomerDemo_LoadAllCompleted(Me, New CustomerCustomerDemo_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerCustomerDemo_LoadAllAsync()
            Me.CustomerCustomerDemo_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub CustomerCustomerDemo_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginCustomerCustomerDemo_LoadAllDelegate Is Nothing) Then
                Me.onBeginCustomerCustomerDemo_LoadAllDelegate = AddressOf Me.OnBeginCustomerCustomerDemo_LoadAll
            End If
            If (Me.onEndCustomerCustomerDemo_LoadAllDelegate Is Nothing) Then
                Me.onEndCustomerCustomerDemo_LoadAllDelegate = AddressOf Me.OnEndCustomerCustomerDemo_LoadAll
            End If
            If (Me.onCustomerCustomerDemo_LoadAllCompletedDelegate Is Nothing) Then
                Me.onCustomerCustomerDemo_LoadAllCompletedDelegate = AddressOf Me.OnCustomerCustomerDemo_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerCustomerDemo_LoadAllDelegate, Nothing, Me.onEndCustomerCustomerDemo_LoadAllDelegate, Me.onCustomerCustomerDemo_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerCustomerDemo_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_QueryForCollection
            Return MyBase.Channel.BeginCustomerCustomerDemo_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerCustomerDemo_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub Implements INorthwind.EndCustomerCustomerDemo_QueryForCollection
            Return MyBase.Channel.EndCustomerCustomerDemo_QueryForCollection(result)
        End Function

        Private Function OnBeginCustomerCustomerDemo_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomerCustomerDemo_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCustomerCustomerDemo_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerCustomerDemoCollectionProxyStub = CType(Me, INorthwind).EndCustomerCustomerDemo_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerCustomerDemo_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.CustomerCustomerDemo_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerCustomerDemo_QueryForCollectionCompleted(Me, New CustomerCustomerDemo_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerCustomerDemo_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.CustomerCustomerDemo_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub CustomerCustomerDemo_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCustomerCustomerDemo_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginCustomerCustomerDemo_QueryForCollectionDelegate = AddressOf Me.OnBeginCustomerCustomerDemo_QueryForCollection
            End If
            If (Me.onEndCustomerCustomerDemo_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndCustomerCustomerDemo_QueryForCollectionDelegate = AddressOf Me.OnEndCustomerCustomerDemo_QueryForCollection
            End If
            If (Me.onCustomerCustomerDemo_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onCustomerCustomerDemo_QueryForCollectionCompletedDelegate = AddressOf Me.OnCustomerCustomerDemo_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerCustomerDemo_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndCustomerCustomerDemo_QueryForCollectionDelegate, Me.onCustomerCustomerDemo_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerCustomerDemo_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_QueryForEntity
            Return MyBase.Channel.BeginCustomerCustomerDemo_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerCustomerDemo_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub Implements INorthwind.EndCustomerCustomerDemo_QueryForEntity
            Return MyBase.Channel.EndCustomerCustomerDemo_QueryForEntity(result)
        End Function

        Private Function OnBeginCustomerCustomerDemo_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomerCustomerDemo_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCustomerCustomerDemo_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerCustomerDemoProxyStub = CType(Me, INorthwind).EndCustomerCustomerDemo_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerCustomerDemo_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.CustomerCustomerDemo_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerCustomerDemo_QueryForEntityCompleted(Me, New CustomerCustomerDemo_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerCustomerDemo_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.CustomerCustomerDemo_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub CustomerCustomerDemo_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCustomerCustomerDemo_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginCustomerCustomerDemo_QueryForEntityDelegate = AddressOf Me.OnBeginCustomerCustomerDemo_QueryForEntity
            End If
            If (Me.onEndCustomerCustomerDemo_QueryForEntityDelegate Is Nothing) Then
                Me.onEndCustomerCustomerDemo_QueryForEntityDelegate = AddressOf Me.OnEndCustomerCustomerDemo_QueryForEntity
            End If
            If (Me.onCustomerCustomerDemo_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onCustomerCustomerDemo_QueryForEntityCompletedDelegate = AddressOf Me.OnCustomerCustomerDemo_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerCustomerDemo_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndCustomerCustomerDemo_QueryForEntityDelegate, Me.onCustomerCustomerDemo_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerCustomerDemo_GetByPrimaryKey(ByVal customerID As String, ByVal customerTypeID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_GetByPrimaryKey
            Return MyBase.Channel.BeginCustomerCustomerDemo_GetByPrimaryKey(customerID, customerTypeID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerCustomerDemo_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub Implements INorthwind.EndCustomerCustomerDemo_GetByPrimaryKey
            Return MyBase.Channel.EndCustomerCustomerDemo_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginCustomerCustomerDemo_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim customerID As String = CType(inValues(0), String)
            Dim customerTypeID As String = CType(inValues(1), String)
            Return CType(Me, INorthwind).BeginCustomerCustomerDemo_GetByPrimaryKey(customerID, customerTypeID, callback, asyncState)
        End Function

        Private Function OnEndCustomerCustomerDemo_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerCustomerDemoProxyStub = CType(Me, INorthwind).EndCustomerCustomerDemo_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerCustomerDemo_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.CustomerCustomerDemo_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerCustomerDemo_GetByPrimaryKeyCompleted(Me, New CustomerCustomerDemo_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerCustomerDemo_GetByPrimaryKeyAsync(ByVal customerID As String, ByVal customerTypeID As String)
            Me.CustomerCustomerDemo_GetByPrimaryKeyAsync(customerID, customerTypeID, Nothing)
        End Sub

        Public Overloads Sub CustomerCustomerDemo_GetByPrimaryKeyAsync(ByVal customerID As String, ByVal customerTypeID As String, ByVal userState As Object)
            If (Me.onBeginCustomerCustomerDemo_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginCustomerCustomerDemo_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginCustomerCustomerDemo_GetByPrimaryKey
            End If
            If (Me.onEndCustomerCustomerDemo_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndCustomerCustomerDemo_GetByPrimaryKeyDelegate = AddressOf Me.OnEndCustomerCustomerDemo_GetByPrimaryKey
            End If
            If (Me.onCustomerCustomerDemo_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onCustomerCustomerDemo_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnCustomerCustomerDemo_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerCustomerDemo_GetByPrimaryKeyDelegate, New Object() {customerID, customerTypeID}, Me.onEndCustomerCustomerDemo_GetByPrimaryKeyDelegate, Me.onCustomerCustomerDemo_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerCustomerDemo_SaveCollection(ByVal collection As Proxies.CustomerCustomerDemoCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_SaveCollection
            Return MyBase.Channel.BeginCustomerCustomerDemo_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerCustomerDemo_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub Implements INorthwind.EndCustomerCustomerDemo_SaveCollection
            Return MyBase.Channel.EndCustomerCustomerDemo_SaveCollection(result)
        End Function

        Private Function OnBeginCustomerCustomerDemo_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.CustomerCustomerDemoCollectionProxyStub = CType(inValues(0), Proxies.CustomerCustomerDemoCollectionProxyStub)
            Return CType(Me, INorthwind).BeginCustomerCustomerDemo_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndCustomerCustomerDemo_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerCustomerDemoCollectionProxyStub = CType(Me, INorthwind).EndCustomerCustomerDemo_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerCustomerDemo_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.CustomerCustomerDemo_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerCustomerDemo_SaveCollectionCompleted(Me, New CustomerCustomerDemo_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerCustomerDemo_SaveCollectionAsync(ByVal collection As Proxies.CustomerCustomerDemoCollectionProxyStub)
            Me.CustomerCustomerDemo_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub CustomerCustomerDemo_SaveCollectionAsync(ByVal collection As Proxies.CustomerCustomerDemoCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginCustomerCustomerDemo_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginCustomerCustomerDemo_SaveCollectionDelegate = AddressOf Me.OnBeginCustomerCustomerDemo_SaveCollection
            End If
            If (Me.onEndCustomerCustomerDemo_SaveCollectionDelegate Is Nothing) Then
                Me.onEndCustomerCustomerDemo_SaveCollectionDelegate = AddressOf Me.OnEndCustomerCustomerDemo_SaveCollection
            End If
            If (Me.onCustomerCustomerDemo_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onCustomerCustomerDemo_SaveCollectionCompletedDelegate = AddressOf Me.OnCustomerCustomerDemo_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerCustomerDemo_SaveCollectionDelegate, New Object() {collection}, Me.onEndCustomerCustomerDemo_SaveCollectionDelegate, Me.onCustomerCustomerDemo_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerCustomerDemo_SaveEntity(ByVal entity As Proxies.CustomerCustomerDemoProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_SaveEntity
            Return MyBase.Channel.BeginCustomerCustomerDemo_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerCustomerDemo_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub Implements INorthwind.EndCustomerCustomerDemo_SaveEntity
            Return MyBase.Channel.EndCustomerCustomerDemo_SaveEntity(result)
        End Function

        Private Function OnBeginCustomerCustomerDemo_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.CustomerCustomerDemoProxyStub = CType(inValues(0), Proxies.CustomerCustomerDemoProxyStub)
            Return CType(Me, INorthwind).BeginCustomerCustomerDemo_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndCustomerCustomerDemo_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerCustomerDemoProxyStub = CType(Me, INorthwind).EndCustomerCustomerDemo_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerCustomerDemo_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.CustomerCustomerDemo_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerCustomerDemo_SaveEntityCompleted(Me, New CustomerCustomerDemo_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerCustomerDemo_SaveEntityAsync(ByVal entity As Proxies.CustomerCustomerDemoProxyStub)
            Me.CustomerCustomerDemo_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub CustomerCustomerDemo_SaveEntityAsync(ByVal entity As Proxies.CustomerCustomerDemoProxyStub, ByVal userState As Object)
            If (Me.onBeginCustomerCustomerDemo_SaveEntityDelegate Is Nothing) Then
                Me.onBeginCustomerCustomerDemo_SaveEntityDelegate = AddressOf Me.OnBeginCustomerCustomerDemo_SaveEntity
            End If
            If (Me.onEndCustomerCustomerDemo_SaveEntityDelegate Is Nothing) Then
                Me.onEndCustomerCustomerDemo_SaveEntityDelegate = AddressOf Me.OnEndCustomerCustomerDemo_SaveEntity
            End If
            If (Me.onCustomerCustomerDemo_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onCustomerCustomerDemo_SaveEntityCompletedDelegate = AddressOf Me.OnCustomerCustomerDemo_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerCustomerDemo_SaveEntityDelegate, New Object() {entity}, Me.onEndCustomerCustomerDemo_SaveEntityDelegate, Me.onCustomerCustomerDemo_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerDemographics_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_LoadAll
            Return MyBase.Channel.BeginCustomerDemographics_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerDemographics_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub Implements INorthwind.EndCustomerDemographics_LoadAll
            Return MyBase.Channel.EndCustomerDemographics_LoadAll(result)
        End Function

        Private Function OnBeginCustomerDemographics_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginCustomerDemographics_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndCustomerDemographics_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerDemographicsCollectionProxyStub = CType(Me, INorthwind).EndCustomerDemographics_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerDemographics_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.CustomerDemographics_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerDemographics_LoadAllCompleted(Me, New CustomerDemographics_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerDemographics_LoadAllAsync()
            Me.CustomerDemographics_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub CustomerDemographics_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginCustomerDemographics_LoadAllDelegate Is Nothing) Then
                Me.onBeginCustomerDemographics_LoadAllDelegate = AddressOf Me.OnBeginCustomerDemographics_LoadAll
            End If
            If (Me.onEndCustomerDemographics_LoadAllDelegate Is Nothing) Then
                Me.onEndCustomerDemographics_LoadAllDelegate = AddressOf Me.OnEndCustomerDemographics_LoadAll
            End If
            If (Me.onCustomerDemographics_LoadAllCompletedDelegate Is Nothing) Then
                Me.onCustomerDemographics_LoadAllCompletedDelegate = AddressOf Me.OnCustomerDemographics_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerDemographics_LoadAllDelegate, Nothing, Me.onEndCustomerDemographics_LoadAllDelegate, Me.onCustomerDemographics_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerDemographics_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_QueryForCollection
            Return MyBase.Channel.BeginCustomerDemographics_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerDemographics_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub Implements INorthwind.EndCustomerDemographics_QueryForCollection
            Return MyBase.Channel.EndCustomerDemographics_QueryForCollection(result)
        End Function

        Private Function OnBeginCustomerDemographics_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomerDemographics_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCustomerDemographics_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerDemographicsCollectionProxyStub = CType(Me, INorthwind).EndCustomerDemographics_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerDemographics_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.CustomerDemographics_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerDemographics_QueryForCollectionCompleted(Me, New CustomerDemographics_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerDemographics_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.CustomerDemographics_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub CustomerDemographics_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCustomerDemographics_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginCustomerDemographics_QueryForCollectionDelegate = AddressOf Me.OnBeginCustomerDemographics_QueryForCollection
            End If
            If (Me.onEndCustomerDemographics_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndCustomerDemographics_QueryForCollectionDelegate = AddressOf Me.OnEndCustomerDemographics_QueryForCollection
            End If
            If (Me.onCustomerDemographics_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onCustomerDemographics_QueryForCollectionCompletedDelegate = AddressOf Me.OnCustomerDemographics_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerDemographics_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndCustomerDemographics_QueryForCollectionDelegate, Me.onCustomerDemographics_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerDemographics_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_QueryForEntity
            Return MyBase.Channel.BeginCustomerDemographics_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerDemographics_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub Implements INorthwind.EndCustomerDemographics_QueryForEntity
            Return MyBase.Channel.EndCustomerDemographics_QueryForEntity(result)
        End Function

        Private Function OnBeginCustomerDemographics_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomerDemographics_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCustomerDemographics_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerDemographicsProxyStub = CType(Me, INorthwind).EndCustomerDemographics_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerDemographics_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.CustomerDemographics_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerDemographics_QueryForEntityCompleted(Me, New CustomerDemographics_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerDemographics_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.CustomerDemographics_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub CustomerDemographics_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCustomerDemographics_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginCustomerDemographics_QueryForEntityDelegate = AddressOf Me.OnBeginCustomerDemographics_QueryForEntity
            End If
            If (Me.onEndCustomerDemographics_QueryForEntityDelegate Is Nothing) Then
                Me.onEndCustomerDemographics_QueryForEntityDelegate = AddressOf Me.OnEndCustomerDemographics_QueryForEntity
            End If
            If (Me.onCustomerDemographics_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onCustomerDemographics_QueryForEntityCompletedDelegate = AddressOf Me.OnCustomerDemographics_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerDemographics_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndCustomerDemographics_QueryForEntityDelegate, Me.onCustomerDemographics_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerDemographics_GetByPrimaryKey(ByVal customerTypeID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_GetByPrimaryKey
            Return MyBase.Channel.BeginCustomerDemographics_GetByPrimaryKey(customerTypeID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerDemographics_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub Implements INorthwind.EndCustomerDemographics_GetByPrimaryKey
            Return MyBase.Channel.EndCustomerDemographics_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginCustomerDemographics_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim customerTypeID As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomerDemographics_GetByPrimaryKey(customerTypeID, callback, asyncState)
        End Function

        Private Function OnEndCustomerDemographics_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerDemographicsProxyStub = CType(Me, INorthwind).EndCustomerDemographics_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerDemographics_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.CustomerDemographics_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerDemographics_GetByPrimaryKeyCompleted(Me, New CustomerDemographics_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerDemographics_GetByPrimaryKeyAsync(ByVal customerTypeID As String)
            Me.CustomerDemographics_GetByPrimaryKeyAsync(customerTypeID, Nothing)
        End Sub

        Public Overloads Sub CustomerDemographics_GetByPrimaryKeyAsync(ByVal customerTypeID As String, ByVal userState As Object)
            If (Me.onBeginCustomerDemographics_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginCustomerDemographics_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginCustomerDemographics_GetByPrimaryKey
            End If
            If (Me.onEndCustomerDemographics_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndCustomerDemographics_GetByPrimaryKeyDelegate = AddressOf Me.OnEndCustomerDemographics_GetByPrimaryKey
            End If
            If (Me.onCustomerDemographics_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onCustomerDemographics_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnCustomerDemographics_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerDemographics_GetByPrimaryKeyDelegate, New Object() {customerTypeID}, Me.onEndCustomerDemographics_GetByPrimaryKeyDelegate, Me.onCustomerDemographics_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerDemographics_SaveCollection(ByVal collection As Proxies.CustomerDemographicsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_SaveCollection
            Return MyBase.Channel.BeginCustomerDemographics_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerDemographics_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub Implements INorthwind.EndCustomerDemographics_SaveCollection
            Return MyBase.Channel.EndCustomerDemographics_SaveCollection(result)
        End Function

        Private Function OnBeginCustomerDemographics_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.CustomerDemographicsCollectionProxyStub = CType(inValues(0), Proxies.CustomerDemographicsCollectionProxyStub)
            Return CType(Me, INorthwind).BeginCustomerDemographics_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndCustomerDemographics_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerDemographicsCollectionProxyStub = CType(Me, INorthwind).EndCustomerDemographics_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerDemographics_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.CustomerDemographics_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerDemographics_SaveCollectionCompleted(Me, New CustomerDemographics_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerDemographics_SaveCollectionAsync(ByVal collection As Proxies.CustomerDemographicsCollectionProxyStub)
            Me.CustomerDemographics_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub CustomerDemographics_SaveCollectionAsync(ByVal collection As Proxies.CustomerDemographicsCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginCustomerDemographics_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginCustomerDemographics_SaveCollectionDelegate = AddressOf Me.OnBeginCustomerDemographics_SaveCollection
            End If
            If (Me.onEndCustomerDemographics_SaveCollectionDelegate Is Nothing) Then
                Me.onEndCustomerDemographics_SaveCollectionDelegate = AddressOf Me.OnEndCustomerDemographics_SaveCollection
            End If
            If (Me.onCustomerDemographics_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onCustomerDemographics_SaveCollectionCompletedDelegate = AddressOf Me.OnCustomerDemographics_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerDemographics_SaveCollectionDelegate, New Object() {collection}, Me.onEndCustomerDemographics_SaveCollectionDelegate, Me.onCustomerDemographics_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomerDemographics_SaveEntity(ByVal entity As Proxies.CustomerDemographicsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_SaveEntity
            Return MyBase.Channel.BeginCustomerDemographics_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomerDemographics_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub Implements INorthwind.EndCustomerDemographics_SaveEntity
            Return MyBase.Channel.EndCustomerDemographics_SaveEntity(result)
        End Function

        Private Function OnBeginCustomerDemographics_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.CustomerDemographicsProxyStub = CType(inValues(0), Proxies.CustomerDemographicsProxyStub)
            Return CType(Me, INorthwind).BeginCustomerDemographics_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndCustomerDemographics_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomerDemographicsProxyStub = CType(Me, INorthwind).EndCustomerDemographics_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomerDemographics_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.CustomerDemographics_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CustomerDemographics_SaveEntityCompleted(Me, New CustomerDemographics_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CustomerDemographics_SaveEntityAsync(ByVal entity As Proxies.CustomerDemographicsProxyStub)
            Me.CustomerDemographics_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub CustomerDemographics_SaveEntityAsync(ByVal entity As Proxies.CustomerDemographicsProxyStub, ByVal userState As Object)
            If (Me.onBeginCustomerDemographics_SaveEntityDelegate Is Nothing) Then
                Me.onBeginCustomerDemographics_SaveEntityDelegate = AddressOf Me.OnBeginCustomerDemographics_SaveEntity
            End If
            If (Me.onEndCustomerDemographics_SaveEntityDelegate Is Nothing) Then
                Me.onEndCustomerDemographics_SaveEntityDelegate = AddressOf Me.OnEndCustomerDemographics_SaveEntity
            End If
            If (Me.onCustomerDemographics_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onCustomerDemographics_SaveEntityCompletedDelegate = AddressOf Me.OnCustomerDemographics_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomerDemographics_SaveEntityDelegate, New Object() {entity}, Me.onEndCustomerDemographics_SaveEntityDelegate, Me.onCustomerDemographics_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_LoadAll
            Return MyBase.Channel.BeginCustomers_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub Implements INorthwind.EndCustomers_LoadAll
            Return MyBase.Channel.EndCustomers_LoadAll(result)
        End Function

        Private Function OnBeginCustomers_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginCustomers_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndCustomers_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomersCollectionProxyStub = CType(Me, INorthwind).EndCustomers_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomers_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Customers_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Customers_LoadAllCompleted(Me, New Customers_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Customers_LoadAllAsync()
            Me.Customers_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Customers_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginCustomers_LoadAllDelegate Is Nothing) Then
                Me.onBeginCustomers_LoadAllDelegate = AddressOf Me.OnBeginCustomers_LoadAll
            End If
            If (Me.onEndCustomers_LoadAllDelegate Is Nothing) Then
                Me.onEndCustomers_LoadAllDelegate = AddressOf Me.OnEndCustomers_LoadAll
            End If
            If (Me.onCustomers_LoadAllCompletedDelegate Is Nothing) Then
                Me.onCustomers_LoadAllCompletedDelegate = AddressOf Me.OnCustomers_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomers_LoadAllDelegate, Nothing, Me.onEndCustomers_LoadAllDelegate, Me.onCustomers_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_QueryForCollection
            Return MyBase.Channel.BeginCustomers_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub Implements INorthwind.EndCustomers_QueryForCollection
            Return MyBase.Channel.EndCustomers_QueryForCollection(result)
        End Function

        Private Function OnBeginCustomers_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomers_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCustomers_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomersCollectionProxyStub = CType(Me, INorthwind).EndCustomers_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomers_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Customers_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Customers_QueryForCollectionCompleted(Me, New Customers_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Customers_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Customers_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Customers_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCustomers_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginCustomers_QueryForCollectionDelegate = AddressOf Me.OnBeginCustomers_QueryForCollection
            End If
            If (Me.onEndCustomers_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndCustomers_QueryForCollectionDelegate = AddressOf Me.OnEndCustomers_QueryForCollection
            End If
            If (Me.onCustomers_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onCustomers_QueryForCollectionCompletedDelegate = AddressOf Me.OnCustomers_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomers_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndCustomers_QueryForCollectionDelegate, Me.onCustomers_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_QueryForEntity
            Return MyBase.Channel.BeginCustomers_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub Implements INorthwind.EndCustomers_QueryForEntity
            Return MyBase.Channel.EndCustomers_QueryForEntity(result)
        End Function

        Private Function OnBeginCustomers_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomers_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndCustomers_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomersProxyStub = CType(Me, INorthwind).EndCustomers_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomers_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Customers_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Customers_QueryForEntityCompleted(Me, New Customers_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Customers_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Customers_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Customers_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginCustomers_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginCustomers_QueryForEntityDelegate = AddressOf Me.OnBeginCustomers_QueryForEntity
            End If
            If (Me.onEndCustomers_QueryForEntityDelegate Is Nothing) Then
                Me.onEndCustomers_QueryForEntityDelegate = AddressOf Me.OnEndCustomers_QueryForEntity
            End If
            If (Me.onCustomers_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onCustomers_QueryForEntityCompletedDelegate = AddressOf Me.OnCustomers_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomers_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndCustomers_QueryForEntityDelegate, Me.onCustomers_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomers_GetByPrimaryKey(ByVal customerID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_GetByPrimaryKey
            Return MyBase.Channel.BeginCustomers_GetByPrimaryKey(customerID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub Implements INorthwind.EndCustomers_GetByPrimaryKey
            Return MyBase.Channel.EndCustomers_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginCustomers_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim customerID As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginCustomers_GetByPrimaryKey(customerID, callback, asyncState)
        End Function

        Private Function OnEndCustomers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomersProxyStub = CType(Me, INorthwind).EndCustomers_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomers_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Customers_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Customers_GetByPrimaryKeyCompleted(Me, New Customers_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Customers_GetByPrimaryKeyAsync(ByVal customerID As String)
            Me.Customers_GetByPrimaryKeyAsync(customerID, Nothing)
        End Sub

        Public Overloads Sub Customers_GetByPrimaryKeyAsync(ByVal customerID As String, ByVal userState As Object)
            If (Me.onBeginCustomers_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginCustomers_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginCustomers_GetByPrimaryKey
            End If
            If (Me.onEndCustomers_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndCustomers_GetByPrimaryKeyDelegate = AddressOf Me.OnEndCustomers_GetByPrimaryKey
            End If
            If (Me.onCustomers_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onCustomers_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnCustomers_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomers_GetByPrimaryKeyDelegate, New Object() {customerID}, Me.onEndCustomers_GetByPrimaryKeyDelegate, Me.onCustomers_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomers_SaveCollection(ByVal collection As Proxies.CustomersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_SaveCollection
            Return MyBase.Channel.BeginCustomers_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub Implements INorthwind.EndCustomers_SaveCollection
            Return MyBase.Channel.EndCustomers_SaveCollection(result)
        End Function

        Private Function OnBeginCustomers_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.CustomersCollectionProxyStub = CType(inValues(0), Proxies.CustomersCollectionProxyStub)
            Return CType(Me, INorthwind).BeginCustomers_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndCustomers_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomersCollectionProxyStub = CType(Me, INorthwind).EndCustomers_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomers_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Customers_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Customers_SaveCollectionCompleted(Me, New Customers_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Customers_SaveCollectionAsync(ByVal collection As Proxies.CustomersCollectionProxyStub)
            Me.Customers_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Customers_SaveCollectionAsync(ByVal collection As Proxies.CustomersCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginCustomers_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginCustomers_SaveCollectionDelegate = AddressOf Me.OnBeginCustomers_SaveCollection
            End If
            If (Me.onEndCustomers_SaveCollectionDelegate Is Nothing) Then
                Me.onEndCustomers_SaveCollectionDelegate = AddressOf Me.OnEndCustomers_SaveCollection
            End If
            If (Me.onCustomers_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onCustomers_SaveCollectionCompletedDelegate = AddressOf Me.OnCustomers_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomers_SaveCollectionDelegate, New Object() {collection}, Me.onEndCustomers_SaveCollectionDelegate, Me.onCustomers_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginCustomers_SaveEntity(ByVal entity As Proxies.CustomersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_SaveEntity
            Return MyBase.Channel.BeginCustomers_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndCustomers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub Implements INorthwind.EndCustomers_SaveEntity
            Return MyBase.Channel.EndCustomers_SaveEntity(result)
        End Function

        Private Function OnBeginCustomers_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.CustomersProxyStub = CType(inValues(0), Proxies.CustomersProxyStub)
            Return CType(Me, INorthwind).BeginCustomers_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndCustomers_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.CustomersProxyStub = CType(Me, INorthwind).EndCustomers_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnCustomers_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Customers_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Customers_SaveEntityCompleted(Me, New Customers_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Customers_SaveEntityAsync(ByVal entity As Proxies.CustomersProxyStub)
            Me.Customers_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Customers_SaveEntityAsync(ByVal entity As Proxies.CustomersProxyStub, ByVal userState As Object)
            If (Me.onBeginCustomers_SaveEntityDelegate Is Nothing) Then
                Me.onBeginCustomers_SaveEntityDelegate = AddressOf Me.OnBeginCustomers_SaveEntity
            End If
            If (Me.onEndCustomers_SaveEntityDelegate Is Nothing) Then
                Me.onEndCustomers_SaveEntityDelegate = AddressOf Me.OnEndCustomers_SaveEntity
            End If
            If (Me.onCustomers_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onCustomers_SaveEntityCompletedDelegate = AddressOf Me.OnCustomers_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCustomers_SaveEntityDelegate, New Object() {entity}, Me.onEndCustomers_SaveEntityDelegate, Me.onCustomers_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployees_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_LoadAll
            Return MyBase.Channel.BeginEmployees_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployees_LoadAll(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub Implements INorthwind.EndEmployees_LoadAll
            Return MyBase.Channel.EndEmployees_LoadAll(result)
        End Function

        Private Function OnBeginEmployees_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginEmployees_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndEmployees_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeesCollectionProxyStub = CType(Me, INorthwind).EndEmployees_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployees_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.Employees_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Employees_LoadAllCompleted(Me, New Employees_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Employees_LoadAllAsync()
            Me.Employees_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub Employees_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginEmployees_LoadAllDelegate Is Nothing) Then
                Me.onBeginEmployees_LoadAllDelegate = AddressOf Me.OnBeginEmployees_LoadAll
            End If
            If (Me.onEndEmployees_LoadAllDelegate Is Nothing) Then
                Me.onEndEmployees_LoadAllDelegate = AddressOf Me.OnEndEmployees_LoadAll
            End If
            If (Me.onEmployees_LoadAllCompletedDelegate Is Nothing) Then
                Me.onEmployees_LoadAllCompletedDelegate = AddressOf Me.OnEmployees_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployees_LoadAllDelegate, Nothing, Me.onEndEmployees_LoadAllDelegate, Me.onEmployees_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployees_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_QueryForCollection
            Return MyBase.Channel.BeginEmployees_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployees_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub Implements INorthwind.EndEmployees_QueryForCollection
            Return MyBase.Channel.EndEmployees_QueryForCollection(result)
        End Function

        Private Function OnBeginEmployees_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginEmployees_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndEmployees_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeesCollectionProxyStub = CType(Me, INorthwind).EndEmployees_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployees_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.Employees_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Employees_QueryForCollectionCompleted(Me, New Employees_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Employees_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.Employees_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Employees_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginEmployees_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginEmployees_QueryForCollectionDelegate = AddressOf Me.OnBeginEmployees_QueryForCollection
            End If
            If (Me.onEndEmployees_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndEmployees_QueryForCollectionDelegate = AddressOf Me.OnEndEmployees_QueryForCollection
            End If
            If (Me.onEmployees_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onEmployees_QueryForCollectionCompletedDelegate = AddressOf Me.OnEmployees_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployees_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndEmployees_QueryForCollectionDelegate, Me.onEmployees_QueryForCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployees_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_QueryForEntity
            Return MyBase.Channel.BeginEmployees_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployees_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub Implements INorthwind.EndEmployees_QueryForEntity
            Return MyBase.Channel.EndEmployees_QueryForEntity(result)
        End Function

        Private Function OnBeginEmployees_QueryForEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginEmployees_QueryForEntity(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndEmployees_QueryForEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeesProxyStub = CType(Me, INorthwind).EndEmployees_QueryForEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployees_QueryForEntityCompleted(ByVal state As Object)
            If (Not (Me.Employees_QueryForEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Employees_QueryForEntityCompleted(Me, New Employees_QueryForEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Employees_QueryForEntityAsync(ByVal serializedQuery As String)
            Me.Employees_QueryForEntityAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub Employees_QueryForEntityAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginEmployees_QueryForEntityDelegate Is Nothing) Then
                Me.onBeginEmployees_QueryForEntityDelegate = AddressOf Me.OnBeginEmployees_QueryForEntity
            End If
            If (Me.onEndEmployees_QueryForEntityDelegate Is Nothing) Then
                Me.onEndEmployees_QueryForEntityDelegate = AddressOf Me.OnEndEmployees_QueryForEntity
            End If
            If (Me.onEmployees_QueryForEntityCompletedDelegate Is Nothing) Then
                Me.onEmployees_QueryForEntityCompletedDelegate = AddressOf Me.OnEmployees_QueryForEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployees_QueryForEntityDelegate, New Object() {serializedQuery}, Me.onEndEmployees_QueryForEntityDelegate, Me.onEmployees_QueryForEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployees_GetByPrimaryKey(ByVal employeeID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_GetByPrimaryKey
            Return MyBase.Channel.BeginEmployees_GetByPrimaryKey(employeeID, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployees_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub Implements INorthwind.EndEmployees_GetByPrimaryKey
            Return MyBase.Channel.EndEmployees_GetByPrimaryKey(result)
        End Function

        Private Function OnBeginEmployees_GetByPrimaryKey(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim employeeID As Integer = CType(inValues(0), Integer)
            Return CType(Me, INorthwind).BeginEmployees_GetByPrimaryKey(employeeID, callback, asyncState)
        End Function

        Private Function OnEndEmployees_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeesProxyStub = CType(Me, INorthwind).EndEmployees_GetByPrimaryKey(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployees_GetByPrimaryKeyCompleted(ByVal state As Object)
            If (Not (Me.Employees_GetByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Employees_GetByPrimaryKeyCompleted(Me, New Employees_GetByPrimaryKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Employees_GetByPrimaryKeyAsync(ByVal employeeID As Integer)
            Me.Employees_GetByPrimaryKeyAsync(employeeID, Nothing)
        End Sub

        Public Overloads Sub Employees_GetByPrimaryKeyAsync(ByVal employeeID As Integer, ByVal userState As Object)
            If (Me.onBeginEmployees_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onBeginEmployees_GetByPrimaryKeyDelegate = AddressOf Me.OnBeginEmployees_GetByPrimaryKey
            End If
            If (Me.onEndEmployees_GetByPrimaryKeyDelegate Is Nothing) Then
                Me.onEndEmployees_GetByPrimaryKeyDelegate = AddressOf Me.OnEndEmployees_GetByPrimaryKey
            End If
            If (Me.onEmployees_GetByPrimaryKeyCompletedDelegate Is Nothing) Then
                Me.onEmployees_GetByPrimaryKeyCompletedDelegate = AddressOf Me.OnEmployees_GetByPrimaryKeyCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployees_GetByPrimaryKeyDelegate, New Object() {employeeID}, Me.onEndEmployees_GetByPrimaryKeyDelegate, Me.onEmployees_GetByPrimaryKeyCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployees_SaveCollection(ByVal collection As Proxies.EmployeesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_SaveCollection
            Return MyBase.Channel.BeginEmployees_SaveCollection(collection, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployees_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub Implements INorthwind.EndEmployees_SaveCollection
            Return MyBase.Channel.EndEmployees_SaveCollection(result)
        End Function

        Private Function OnBeginEmployees_SaveCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim collection As Proxies.EmployeesCollectionProxyStub = CType(inValues(0), Proxies.EmployeesCollectionProxyStub)
            Return CType(Me, INorthwind).BeginEmployees_SaveCollection(collection, callback, asyncState)
        End Function

        Private Function OnEndEmployees_SaveCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeesCollectionProxyStub = CType(Me, INorthwind).EndEmployees_SaveCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployees_SaveCollectionCompleted(ByVal state As Object)
            If (Not (Me.Employees_SaveCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Employees_SaveCollectionCompleted(Me, New Employees_SaveCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Employees_SaveCollectionAsync(ByVal collection As Proxies.EmployeesCollectionProxyStub)
            Me.Employees_SaveCollectionAsync(collection, Nothing)
        End Sub

        Public Overloads Sub Employees_SaveCollectionAsync(ByVal collection As Proxies.EmployeesCollectionProxyStub, ByVal userState As Object)
            If (Me.onBeginEmployees_SaveCollectionDelegate Is Nothing) Then
                Me.onBeginEmployees_SaveCollectionDelegate = AddressOf Me.OnBeginEmployees_SaveCollection
            End If
            If (Me.onEndEmployees_SaveCollectionDelegate Is Nothing) Then
                Me.onEndEmployees_SaveCollectionDelegate = AddressOf Me.OnEndEmployees_SaveCollection
            End If
            If (Me.onEmployees_SaveCollectionCompletedDelegate Is Nothing) Then
                Me.onEmployees_SaveCollectionCompletedDelegate = AddressOf Me.OnEmployees_SaveCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployees_SaveCollectionDelegate, New Object() {collection}, Me.onEndEmployees_SaveCollectionDelegate, Me.onEmployees_SaveCollectionCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployees_SaveEntity(ByVal entity As Proxies.EmployeesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_SaveEntity
            Return MyBase.Channel.BeginEmployees_SaveEntity(entity, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployees_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub Implements INorthwind.EndEmployees_SaveEntity
            Return MyBase.Channel.EndEmployees_SaveEntity(result)
        End Function

        Private Function OnBeginEmployees_SaveEntity(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entity As Proxies.EmployeesProxyStub = CType(inValues(0), Proxies.EmployeesProxyStub)
            Return CType(Me, INorthwind).BeginEmployees_SaveEntity(entity, callback, asyncState)
        End Function

        Private Function OnEndEmployees_SaveEntity(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeesProxyStub = CType(Me, INorthwind).EndEmployees_SaveEntity(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployees_SaveEntityCompleted(ByVal state As Object)
            If (Not (Me.Employees_SaveEntityCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent Employees_SaveEntityCompleted(Me, New Employees_SaveEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub Employees_SaveEntityAsync(ByVal entity As Proxies.EmployeesProxyStub)
            Me.Employees_SaveEntityAsync(entity, Nothing)
        End Sub

        Public Overloads Sub Employees_SaveEntityAsync(ByVal entity As Proxies.EmployeesProxyStub, ByVal userState As Object)
            If (Me.onBeginEmployees_SaveEntityDelegate Is Nothing) Then
                Me.onBeginEmployees_SaveEntityDelegate = AddressOf Me.OnBeginEmployees_SaveEntity
            End If
            If (Me.onEndEmployees_SaveEntityDelegate Is Nothing) Then
                Me.onEndEmployees_SaveEntityDelegate = AddressOf Me.OnEndEmployees_SaveEntity
            End If
            If (Me.onEmployees_SaveEntityCompletedDelegate Is Nothing) Then
                Me.onEmployees_SaveEntityCompletedDelegate = AddressOf Me.OnEmployees_SaveEntityCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployees_SaveEntityDelegate, New Object() {entity}, Me.onEndEmployees_SaveEntityDelegate, Me.onEmployees_SaveEntityCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployeeTerritories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_LoadAll
            Return MyBase.Channel.BeginEmployeeTerritories_LoadAll(callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployeeTerritories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub Implements INorthwind.EndEmployeeTerritories_LoadAll
            Return MyBase.Channel.EndEmployeeTerritories_LoadAll(result)
        End Function

        Private Function OnBeginEmployeeTerritories_LoadAll(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, INorthwind).BeginEmployeeTerritories_LoadAll(callback, asyncState)
        End Function

        Private Function OnEndEmployeeTerritories_LoadAll(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeeTerritoriesCollectionProxyStub = CType(Me, INorthwind).EndEmployeeTerritories_LoadAll(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployeeTerritories_LoadAllCompleted(ByVal state As Object)
            If (Not (Me.EmployeeTerritories_LoadAllCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent EmployeeTerritories_LoadAllCompleted(Me, New EmployeeTerritories_LoadAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub EmployeeTerritories_LoadAllAsync()
            Me.EmployeeTerritories_LoadAllAsync(Nothing)
        End Sub

        Public Overloads Sub EmployeeTerritories_LoadAllAsync(ByVal userState As Object)
            If (Me.onBeginEmployeeTerritories_LoadAllDelegate Is Nothing) Then
                Me.onBeginEmployeeTerritories_LoadAllDelegate = AddressOf Me.OnBeginEmployeeTerritories_LoadAll
            End If
            If (Me.onEndEmployeeTerritories_LoadAllDelegate Is Nothing) Then
                Me.onEndEmployeeTerritories_LoadAllDelegate = AddressOf Me.OnEndEmployeeTerritories_LoadAll
            End If
            If (Me.onEmployeeTerritories_LoadAllCompletedDelegate Is Nothing) Then
                Me.onEmployeeTerritories_LoadAllCompletedDelegate = AddressOf Me.OnEmployeeTerritories_LoadAllCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployeeTerritories_LoadAllDelegate, Nothing, Me.onEndEmployeeTerritories_LoadAllDelegate, Me.onEmployeeTerritories_LoadAllCompletedDelegate, userState)
        End Sub

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_BeginEmployeeTerritories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_QueryForCollection
            Return MyBase.Channel.BeginEmployeeTerritories_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)> _
        Function NorthwindClient_INorthwind_EndEmployeeTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub Implements INorthwind.EndEmployeeTerritories_QueryForCollection
            Return MyBase.Channel.EndEmployeeTerritories_QueryForCollection(result)
        End Function

        Private Function OnBeginEmployeeTerritories_QueryForCollection(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim serializedQuery As String = CType(inValues(0), String)
            Return CType(Me, INorthwind).BeginEmployeeTerritories_QueryForCollection(serializedQuery, callback, asyncState)
        End Function

        Private Function OnEndEmployeeTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As Proxies.EmployeeTerritoriesCollectionProxyStub = CType(Me, INorthwind).EndEmployeeTerritories_QueryForCollection(result)
            Return New Object() {retVal}
        End Function

        Private Sub OnEmployeeTerritories_QueryForCollectionCompleted(ByVal state As Object)
            If (Not (Me.EmployeeTerritories_QueryForCollectionCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent EmployeeTerritories_QueryForCollectionCompleted(Me, New EmployeeTerritories_QueryForCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub EmployeeTerritories_QueryForCollectionAsync(ByVal serializedQuery As String)
            Me.EmployeeTerritories_QueryForCollectionAsync(serializedQuery, Nothing)
        End Sub

        Public Overloads Sub EmployeeTerritories_QueryForCollectionAsync(ByVal serializedQuery As String, ByVal userState As Object)
            If (Me.onBeginEmployeeTerritories_QueryForCollectionDelegate Is Nothing) Then
                Me.onBeginEmployeeTerritories_QueryForCollectionDelegate = AddressOf Me.OnBeginEmployeeTerritories_QueryForCollection
            End If
            If (Me.onEndEmployeeTerritories_QueryForCollectionDelegate Is Nothing) Then
                Me.onEndEmployeeTerritories_QueryForCollectionDelegate = AddressOf Me.OnEndEmployeeTerritories_QueryForCollection
            End If
            If (Me.onEmployeeTerritories_QueryForCollectionCompletedDelegate Is Nothing) Then
                Me.onEmployeeTerritories_QueryForCollectionCompletedDelegate = AddressOf Me.OnEmployeeTerritories_QueryForCollectionCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginEmployeeTerritories_QueryForCollectionDelegate, New Object() {serializedQuery}, Me.onEndEmployeeTerritories_QueryForCollectionDelegate, Me.onEmployeeTerritories_QueryForCollectionCompletedDelegate, userState)
        End Sub

        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function

        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me, System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function

        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub

        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub

        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me, System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function

        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me, System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function

        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state, InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub

        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub

        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub

        Protected Overrides Function CreateChannel() As INorthwind
            Return New NorthwindClientChannel(Me)
        End Function

        Private Class NorthwindClientChannel
            Inherits ChannelBase(Of INorthwind)
            Implements INorthwind

            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of INorthwind))
                MyBase.New(client)
            End Sub

            Public Function BeginShippers_SaveCollection(ByVal collection As Proxies.ShippersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Shippers_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndShippers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub Implements INorthwind.EndShippers_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ShippersCollectionProxyStub = CType(MyBase.EndInvoke("Shippers_SaveCollection", _args, result), Proxies.ShippersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginShippers_SaveEntity(ByVal entity As Proxies.ShippersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Shippers_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndShippers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub Implements INorthwind.EndShippers_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ShippersProxyStub = CType(MyBase.EndInvoke("Shippers_SaveEntity", _args, result), Proxies.ShippersProxyStub)
                Return _result
            End Function

            Public Function BeginSuppliers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Suppliers_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndSuppliers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub Implements INorthwind.EndSuppliers_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.SuppliersCollectionProxyStub = CType(MyBase.EndInvoke("Suppliers_LoadAll", _args, result), Proxies.SuppliersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginSuppliers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Suppliers_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndSuppliers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub Implements INorthwind.EndSuppliers_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.SuppliersCollectionProxyStub = CType(MyBase.EndInvoke("Suppliers_QueryForCollection", _args, result), Proxies.SuppliersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginSuppliers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Suppliers_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndSuppliers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub Implements INorthwind.EndSuppliers_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.SuppliersProxyStub = CType(MyBase.EndInvoke("Suppliers_QueryForEntity", _args, result), Proxies.SuppliersProxyStub)
                Return _result
            End Function

            Public Function BeginSuppliers_GetByPrimaryKey(ByVal supplierID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = supplierID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Suppliers_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndSuppliers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub Implements INorthwind.EndSuppliers_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.SuppliersProxyStub = CType(MyBase.EndInvoke("Suppliers_GetByPrimaryKey", _args, result), Proxies.SuppliersProxyStub)
                Return _result
            End Function

            Public Function BeginSuppliers_SaveCollection(ByVal collection As Proxies.SuppliersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Suppliers_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndSuppliers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.SuppliersCollectionProxyStub Implements INorthwind.EndSuppliers_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.SuppliersCollectionProxyStub = CType(MyBase.EndInvoke("Suppliers_SaveCollection", _args, result), Proxies.SuppliersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginSuppliers_SaveEntity(ByVal entity As Proxies.SuppliersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginSuppliers_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Suppliers_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndSuppliers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.SuppliersProxyStub Implements INorthwind.EndSuppliers_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.SuppliersProxyStub = CType(MyBase.EndInvoke("Suppliers_SaveEntity", _args, result), Proxies.SuppliersProxyStub)
                Return _result
            End Function

            Public Function BeginTerritories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Territories_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndTerritories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub Implements INorthwind.EndTerritories_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.TerritoriesCollectionProxyStub = CType(MyBase.EndInvoke("Territories_LoadAll", _args, result), Proxies.TerritoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginTerritories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Territories_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub Implements INorthwind.EndTerritories_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.TerritoriesCollectionProxyStub = CType(MyBase.EndInvoke("Territories_QueryForCollection", _args, result), Proxies.TerritoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginTerritories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Territories_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub Implements INorthwind.EndTerritories_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.TerritoriesProxyStub = CType(MyBase.EndInvoke("Territories_QueryForEntity", _args, result), Proxies.TerritoriesProxyStub)
                Return _result
            End Function

            Public Function BeginTerritories_GetByPrimaryKey(ByVal territoryID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = territoryID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Territories_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub Implements INorthwind.EndTerritories_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.TerritoriesProxyStub = CType(MyBase.EndInvoke("Territories_GetByPrimaryKey", _args, result), Proxies.TerritoriesProxyStub)
                Return _result
            End Function

            Public Function BeginTerritories_SaveCollection(ByVal collection As Proxies.TerritoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Territories_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.TerritoriesCollectionProxyStub Implements INorthwind.EndTerritories_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.TerritoriesCollectionProxyStub = CType(MyBase.EndInvoke("Territories_SaveCollection", _args, result), Proxies.TerritoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginTerritories_SaveEntity(ByVal entity As Proxies.TerritoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginTerritories_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Territories_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.TerritoriesProxyStub Implements INorthwind.EndTerritories_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.TerritoriesProxyStub = CType(MyBase.EndInvoke("Territories_SaveEntity", _args, result), Proxies.TerritoriesProxyStub)
                Return _result
            End Function

            Public Function BeginEmployeeTerritories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("EmployeeTerritories_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployeeTerritories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub Implements INorthwind.EndEmployeeTerritories_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeeTerritoriesProxyStub = CType(MyBase.EndInvoke("EmployeeTerritories_QueryForEntity", _args, result), Proxies.EmployeeTerritoriesProxyStub)
                Return _result
            End Function

            Public Function BeginEmployeeTerritories_GetByPrimaryKey(ByVal employeeID As Integer, ByVal territoryID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_GetByPrimaryKey
                Dim _args((2) - 1) As Object
                _args(0) = employeeID
                _args(1) = territoryID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("EmployeeTerritories_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployeeTerritories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub Implements INorthwind.EndEmployeeTerritories_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeeTerritoriesProxyStub = CType(MyBase.EndInvoke("EmployeeTerritories_GetByPrimaryKey", _args, result), Proxies.EmployeeTerritoriesProxyStub)
                Return _result
            End Function

            Public Function BeginEmployeeTerritories_SaveCollection(ByVal collection As Proxies.EmployeeTerritoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("EmployeeTerritories_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployeeTerritories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub Implements INorthwind.EndEmployeeTerritories_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeeTerritoriesCollectionProxyStub = CType(MyBase.EndInvoke("EmployeeTerritories_SaveCollection", _args, result), Proxies.EmployeeTerritoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginEmployeeTerritories_SaveEntity(ByVal entity As Proxies.EmployeeTerritoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("EmployeeTerritories_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployeeTerritories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesProxyStub Implements INorthwind.EndEmployeeTerritories_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeeTerritoriesProxyStub = CType(MyBase.EndInvoke("EmployeeTerritories_SaveEntity", _args, result), Proxies.EmployeeTerritoriesProxyStub)
                Return _result
            End Function

            Public Function BeginOrderDetails_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("OrderDetails_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrderDetails_LoadAll(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub Implements INorthwind.EndOrderDetails_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrderDetailsCollectionProxyStub = CType(MyBase.EndInvoke("OrderDetails_LoadAll", _args, result), Proxies.OrderDetailsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginOrderDetails_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("OrderDetails_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrderDetails_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub Implements INorthwind.EndOrderDetails_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrderDetailsCollectionProxyStub = CType(MyBase.EndInvoke("OrderDetails_QueryForCollection", _args, result), Proxies.OrderDetailsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginOrderDetails_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("OrderDetails_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrderDetails_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub Implements INorthwind.EndOrderDetails_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrderDetailsProxyStub = CType(MyBase.EndInvoke("OrderDetails_QueryForEntity", _args, result), Proxies.OrderDetailsProxyStub)
                Return _result
            End Function

            Public Function BeginOrderDetails_GetByPrimaryKey(ByVal orderID As Integer, ByVal productID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_GetByPrimaryKey
                Dim _args((2) - 1) As Object
                _args(0) = orderID
                _args(1) = productID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("OrderDetails_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrderDetails_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub Implements INorthwind.EndOrderDetails_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrderDetailsProxyStub = CType(MyBase.EndInvoke("OrderDetails_GetByPrimaryKey", _args, result), Proxies.OrderDetailsProxyStub)
                Return _result
            End Function

            Public Function BeginOrderDetails_SaveCollection(ByVal collection As Proxies.OrderDetailsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("OrderDetails_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrderDetails_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsCollectionProxyStub Implements INorthwind.EndOrderDetails_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrderDetailsCollectionProxyStub = CType(MyBase.EndInvoke("OrderDetails_SaveCollection", _args, result), Proxies.OrderDetailsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginOrderDetails_SaveEntity(ByVal entity As Proxies.OrderDetailsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrderDetails_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("OrderDetails_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrderDetails_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.OrderDetailsProxyStub Implements INorthwind.EndOrderDetails_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrderDetailsProxyStub = CType(MyBase.EndInvoke("OrderDetails_SaveEntity", _args, result), Proxies.OrderDetailsProxyStub)
                Return _result
            End Function

            Public Function BeginOrders_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Orders_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrders_LoadAll(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub Implements INorthwind.EndOrders_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrdersCollectionProxyStub = CType(MyBase.EndInvoke("Orders_LoadAll", _args, result), Proxies.OrdersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginOrders_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Orders_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrders_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub Implements INorthwind.EndOrders_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrdersCollectionProxyStub = CType(MyBase.EndInvoke("Orders_QueryForCollection", _args, result), Proxies.OrdersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginOrders_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Orders_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrders_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub Implements INorthwind.EndOrders_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrdersProxyStub = CType(MyBase.EndInvoke("Orders_QueryForEntity", _args, result), Proxies.OrdersProxyStub)
                Return _result
            End Function

            Public Function BeginOrders_GetByPrimaryKey(ByVal orderID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = orderID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Orders_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrders_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub Implements INorthwind.EndOrders_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrdersProxyStub = CType(MyBase.EndInvoke("Orders_GetByPrimaryKey", _args, result), Proxies.OrdersProxyStub)
                Return _result
            End Function

            Public Function BeginOrders_SaveCollection(ByVal collection As Proxies.OrdersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Orders_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrders_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.OrdersCollectionProxyStub Implements INorthwind.EndOrders_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrdersCollectionProxyStub = CType(MyBase.EndInvoke("Orders_SaveCollection", _args, result), Proxies.OrdersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginOrders_SaveEntity(ByVal entity As Proxies.OrdersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginOrders_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Orders_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndOrders_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.OrdersProxyStub Implements INorthwind.EndOrders_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.OrdersProxyStub = CType(MyBase.EndInvoke("Orders_SaveEntity", _args, result), Proxies.OrdersProxyStub)
                Return _result
            End Function

            Public Function BeginProducts_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Products_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndProducts_LoadAll(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub Implements INorthwind.EndProducts_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ProductsCollectionProxyStub = CType(MyBase.EndInvoke("Products_LoadAll", _args, result), Proxies.ProductsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginProducts_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Products_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndProducts_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub Implements INorthwind.EndProducts_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ProductsCollectionProxyStub = CType(MyBase.EndInvoke("Products_QueryForCollection", _args, result), Proxies.ProductsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginProducts_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Products_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndProducts_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub Implements INorthwind.EndProducts_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ProductsProxyStub = CType(MyBase.EndInvoke("Products_QueryForEntity", _args, result), Proxies.ProductsProxyStub)
                Return _result
            End Function

            Public Function BeginProducts_GetByPrimaryKey(ByVal productID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = productID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Products_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndProducts_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub Implements INorthwind.EndProducts_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ProductsProxyStub = CType(MyBase.EndInvoke("Products_GetByPrimaryKey", _args, result), Proxies.ProductsProxyStub)
                Return _result
            End Function

            Public Function BeginProducts_SaveCollection(ByVal collection As Proxies.ProductsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Products_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndProducts_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.ProductsCollectionProxyStub Implements INorthwind.EndProducts_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ProductsCollectionProxyStub = CType(MyBase.EndInvoke("Products_SaveCollection", _args, result), Proxies.ProductsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginProducts_SaveEntity(ByVal entity As Proxies.ProductsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginProducts_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Products_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndProducts_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.ProductsProxyStub Implements INorthwind.EndProducts_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ProductsProxyStub = CType(MyBase.EndInvoke("Products_SaveEntity", _args, result), Proxies.ProductsProxyStub)
                Return _result
            End Function

            Public Function BeginRegion_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Region_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndRegion_LoadAll(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub Implements INorthwind.EndRegion_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.RegionCollectionProxyStub = CType(MyBase.EndInvoke("Region_LoadAll", _args, result), Proxies.RegionCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginRegion_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Region_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndRegion_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub Implements INorthwind.EndRegion_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.RegionCollectionProxyStub = CType(MyBase.EndInvoke("Region_QueryForCollection", _args, result), Proxies.RegionCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginRegion_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Region_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndRegion_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub Implements INorthwind.EndRegion_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.RegionProxyStub = CType(MyBase.EndInvoke("Region_QueryForEntity", _args, result), Proxies.RegionProxyStub)
                Return _result
            End Function

            Public Function BeginRegion_GetByPrimaryKey(ByVal regionID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = regionID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Region_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndRegion_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub Implements INorthwind.EndRegion_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.RegionProxyStub = CType(MyBase.EndInvoke("Region_GetByPrimaryKey", _args, result), Proxies.RegionProxyStub)
                Return _result
            End Function

            Public Function BeginRegion_SaveCollection(ByVal collection As Proxies.RegionCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Region_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndRegion_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.RegionCollectionProxyStub Implements INorthwind.EndRegion_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.RegionCollectionProxyStub = CType(MyBase.EndInvoke("Region_SaveCollection", _args, result), Proxies.RegionCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginRegion_SaveEntity(ByVal entity As Proxies.RegionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginRegion_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Region_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndRegion_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.RegionProxyStub Implements INorthwind.EndRegion_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.RegionProxyStub = CType(MyBase.EndInvoke("Region_SaveEntity", _args, result), Proxies.RegionProxyStub)
                Return _result
            End Function

            Public Function BeginShippers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Shippers_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndShippers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub Implements INorthwind.EndShippers_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ShippersCollectionProxyStub = CType(MyBase.EndInvoke("Shippers_LoadAll", _args, result), Proxies.ShippersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginShippers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Shippers_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndShippers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.ShippersCollectionProxyStub Implements INorthwind.EndShippers_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ShippersCollectionProxyStub = CType(MyBase.EndInvoke("Shippers_QueryForCollection", _args, result), Proxies.ShippersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginShippers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Shippers_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndShippers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub Implements INorthwind.EndShippers_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ShippersProxyStub = CType(MyBase.EndInvoke("Shippers_QueryForEntity", _args, result), Proxies.ShippersProxyStub)
                Return _result
            End Function

            Public Function BeginShippers_GetByPrimaryKey(ByVal shipperID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginShippers_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = shipperID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Shippers_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndShippers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.ShippersProxyStub Implements INorthwind.EndShippers_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.ShippersProxyStub = CType(MyBase.EndInvoke("Shippers_GetByPrimaryKey", _args, result), Proxies.ShippersProxyStub)
                Return _result
            End Function

            Public Function BeginCategories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Categories_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCategories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub Implements INorthwind.EndCategories_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CategoriesCollectionProxyStub = CType(MyBase.EndInvoke("Categories_LoadAll", _args, result), Proxies.CategoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCategories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Categories_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCategories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub Implements INorthwind.EndCategories_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CategoriesCollectionProxyStub = CType(MyBase.EndInvoke("Categories_QueryForCollection", _args, result), Proxies.CategoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCategories_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Categories_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCategories_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub Implements INorthwind.EndCategories_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CategoriesProxyStub = CType(MyBase.EndInvoke("Categories_QueryForEntity", _args, result), Proxies.CategoriesProxyStub)
                Return _result
            End Function

            Public Function BeginCategories_GetByPrimaryKey(ByVal categoryID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = categoryID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Categories_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCategories_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub Implements INorthwind.EndCategories_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CategoriesProxyStub = CType(MyBase.EndInvoke("Categories_GetByPrimaryKey", _args, result), Proxies.CategoriesProxyStub)
                Return _result
            End Function

            Public Function BeginCategories_SaveCollection(ByVal collection As Proxies.CategoriesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Categories_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCategories_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CategoriesCollectionProxyStub Implements INorthwind.EndCategories_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CategoriesCollectionProxyStub = CType(MyBase.EndInvoke("Categories_SaveCollection", _args, result), Proxies.CategoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCategories_SaveEntity(ByVal entity As Proxies.CategoriesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCategories_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Categories_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCategories_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CategoriesProxyStub Implements INorthwind.EndCategories_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CategoriesProxyStub = CType(MyBase.EndInvoke("Categories_SaveEntity", _args, result), Proxies.CategoriesProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerCustomerDemo_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerCustomerDemo_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerCustomerDemo_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub Implements INorthwind.EndCustomerCustomerDemo_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerCustomerDemoCollectionProxyStub = CType(MyBase.EndInvoke("CustomerCustomerDemo_LoadAll", _args, result), Proxies.CustomerCustomerDemoCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerCustomerDemo_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerCustomerDemo_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerCustomerDemo_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub Implements INorthwind.EndCustomerCustomerDemo_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerCustomerDemoCollectionProxyStub = CType(MyBase.EndInvoke("CustomerCustomerDemo_QueryForCollection", _args, result), Proxies.CustomerCustomerDemoCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerCustomerDemo_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerCustomerDemo_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerCustomerDemo_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub Implements INorthwind.EndCustomerCustomerDemo_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerCustomerDemoProxyStub = CType(MyBase.EndInvoke("CustomerCustomerDemo_QueryForEntity", _args, result), Proxies.CustomerCustomerDemoProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerCustomerDemo_GetByPrimaryKey(ByVal customerID As String, ByVal customerTypeID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_GetByPrimaryKey
                Dim _args((2) - 1) As Object
                _args(0) = customerID
                _args(1) = customerTypeID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerCustomerDemo_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerCustomerDemo_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub Implements INorthwind.EndCustomerCustomerDemo_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerCustomerDemoProxyStub = CType(MyBase.EndInvoke("CustomerCustomerDemo_GetByPrimaryKey", _args, result), Proxies.CustomerCustomerDemoProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerCustomerDemo_SaveCollection(ByVal collection As Proxies.CustomerCustomerDemoCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerCustomerDemo_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerCustomerDemo_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoCollectionProxyStub Implements INorthwind.EndCustomerCustomerDemo_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerCustomerDemoCollectionProxyStub = CType(MyBase.EndInvoke("CustomerCustomerDemo_SaveCollection", _args, result), Proxies.CustomerCustomerDemoCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerCustomerDemo_SaveEntity(ByVal entity As Proxies.CustomerCustomerDemoProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerCustomerDemo_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerCustomerDemo_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerCustomerDemo_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerCustomerDemoProxyStub Implements INorthwind.EndCustomerCustomerDemo_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerCustomerDemoProxyStub = CType(MyBase.EndInvoke("CustomerCustomerDemo_SaveEntity", _args, result), Proxies.CustomerCustomerDemoProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerDemographics_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerDemographics_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerDemographics_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub Implements INorthwind.EndCustomerDemographics_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerDemographicsCollectionProxyStub = CType(MyBase.EndInvoke("CustomerDemographics_LoadAll", _args, result), Proxies.CustomerDemographicsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerDemographics_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerDemographics_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerDemographics_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub Implements INorthwind.EndCustomerDemographics_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerDemographicsCollectionProxyStub = CType(MyBase.EndInvoke("CustomerDemographics_QueryForCollection", _args, result), Proxies.CustomerDemographicsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerDemographics_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerDemographics_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerDemographics_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub Implements INorthwind.EndCustomerDemographics_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerDemographicsProxyStub = CType(MyBase.EndInvoke("CustomerDemographics_QueryForEntity", _args, result), Proxies.CustomerDemographicsProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerDemographics_GetByPrimaryKey(ByVal customerTypeID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = customerTypeID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerDemographics_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerDemographics_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub Implements INorthwind.EndCustomerDemographics_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerDemographicsProxyStub = CType(MyBase.EndInvoke("CustomerDemographics_GetByPrimaryKey", _args, result), Proxies.CustomerDemographicsProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerDemographics_SaveCollection(ByVal collection As Proxies.CustomerDemographicsCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerDemographics_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerDemographics_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsCollectionProxyStub Implements INorthwind.EndCustomerDemographics_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerDemographicsCollectionProxyStub = CType(MyBase.EndInvoke("CustomerDemographics_SaveCollection", _args, result), Proxies.CustomerDemographicsCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomerDemographics_SaveEntity(ByVal entity As Proxies.CustomerDemographicsProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomerDemographics_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("CustomerDemographics_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomerDemographics_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomerDemographicsProxyStub Implements INorthwind.EndCustomerDemographics_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomerDemographicsProxyStub = CType(MyBase.EndInvoke("CustomerDemographics_SaveEntity", _args, result), Proxies.CustomerDemographicsProxyStub)
                Return _result
            End Function

            Public Function BeginCustomers_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Customers_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomers_LoadAll(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub Implements INorthwind.EndCustomers_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomersCollectionProxyStub = CType(MyBase.EndInvoke("Customers_LoadAll", _args, result), Proxies.CustomersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomers_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Customers_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomers_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub Implements INorthwind.EndCustomers_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomersCollectionProxyStub = CType(MyBase.EndInvoke("Customers_QueryForCollection", _args, result), Proxies.CustomersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomers_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Customers_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomers_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub Implements INorthwind.EndCustomers_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomersProxyStub = CType(MyBase.EndInvoke("Customers_QueryForEntity", _args, result), Proxies.CustomersProxyStub)
                Return _result
            End Function

            Public Function BeginCustomers_GetByPrimaryKey(ByVal customerID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = customerID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Customers_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomers_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub Implements INorthwind.EndCustomers_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomersProxyStub = CType(MyBase.EndInvoke("Customers_GetByPrimaryKey", _args, result), Proxies.CustomersProxyStub)
                Return _result
            End Function

            Public Function BeginCustomers_SaveCollection(ByVal collection As Proxies.CustomersCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Customers_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomers_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.CustomersCollectionProxyStub Implements INorthwind.EndCustomers_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomersCollectionProxyStub = CType(MyBase.EndInvoke("Customers_SaveCollection", _args, result), Proxies.CustomersCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginCustomers_SaveEntity(ByVal entity As Proxies.CustomersProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginCustomers_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Customers_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndCustomers_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.CustomersProxyStub Implements INorthwind.EndCustomers_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.CustomersProxyStub = CType(MyBase.EndInvoke("Customers_SaveEntity", _args, result), Proxies.CustomersProxyStub)
                Return _result
            End Function

            Public Function BeginEmployees_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Employees_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployees_LoadAll(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub Implements INorthwind.EndEmployees_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeesCollectionProxyStub = CType(MyBase.EndInvoke("Employees_LoadAll", _args, result), Proxies.EmployeesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginEmployees_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Employees_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployees_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub Implements INorthwind.EndEmployees_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeesCollectionProxyStub = CType(MyBase.EndInvoke("Employees_QueryForCollection", _args, result), Proxies.EmployeesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginEmployees_QueryForEntity(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_QueryForEntity
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Employees_QueryForEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployees_QueryForEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub Implements INorthwind.EndEmployees_QueryForEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeesProxyStub = CType(MyBase.EndInvoke("Employees_QueryForEntity", _args, result), Proxies.EmployeesProxyStub)
                Return _result
            End Function

            Public Function BeginEmployees_GetByPrimaryKey(ByVal employeeID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_GetByPrimaryKey
                Dim _args((1) - 1) As Object
                _args(0) = employeeID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Employees_GetByPrimaryKey", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployees_GetByPrimaryKey(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub Implements INorthwind.EndEmployees_GetByPrimaryKey
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeesProxyStub = CType(MyBase.EndInvoke("Employees_GetByPrimaryKey", _args, result), Proxies.EmployeesProxyStub)
                Return _result
            End Function

            Public Function BeginEmployees_SaveCollection(ByVal collection As Proxies.EmployeesCollectionProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_SaveCollection
                Dim _args((1) - 1) As Object
                _args(0) = collection
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Employees_SaveCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployees_SaveCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeesCollectionProxyStub Implements INorthwind.EndEmployees_SaveCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeesCollectionProxyStub = CType(MyBase.EndInvoke("Employees_SaveCollection", _args, result), Proxies.EmployeesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginEmployees_SaveEntity(ByVal entity As Proxies.EmployeesProxyStub, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployees_SaveEntity
                Dim _args((1) - 1) As Object
                _args(0) = entity
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Employees_SaveEntity", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployees_SaveEntity(ByVal result As System.IAsyncResult) As Proxies.EmployeesProxyStub Implements INorthwind.EndEmployees_SaveEntity
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeesProxyStub = CType(MyBase.EndInvoke("Employees_SaveEntity", _args, result), Proxies.EmployeesProxyStub)
                Return _result
            End Function

            Public Function BeginEmployeeTerritories_LoadAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("EmployeeTerritories_LoadAll", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployeeTerritories_LoadAll(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub Implements INorthwind.EndEmployeeTerritories_LoadAll
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeeTerritoriesCollectionProxyStub = CType(MyBase.EndInvoke("EmployeeTerritories_LoadAll", _args, result), Proxies.EmployeeTerritoriesCollectionProxyStub)
                Return _result
            End Function

            Public Function BeginEmployeeTerritories_QueryForCollection(ByVal serializedQuery As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements INorthwind.BeginEmployeeTerritories_QueryForCollection
                Dim _args((1) - 1) As Object
                _args(0) = serializedQuery
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("EmployeeTerritories_QueryForCollection", _args, callback, asyncState)
                Return _result
            End Function

            Public Function EndEmployeeTerritories_QueryForCollection(ByVal result As System.IAsyncResult) As Proxies.EmployeeTerritoriesCollectionProxyStub Implements INorthwind.EndEmployeeTerritories_QueryForCollection
                Dim _args((0) - 1) As Object
                Dim _result As Proxies.EmployeeTerritoriesCollectionProxyStub = CType(MyBase.EndInvoke("EmployeeTerritories_QueryForCollection", _args, result), Proxies.EmployeeTerritoriesCollectionProxyStub)
                Return _result
            End Function
        End Class
    End Class
End Namespace
